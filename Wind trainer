{"cells":[{"cell_type":"markdown","metadata":{"id":"4YjQV-7IU57L"},"source":["# GAN notebook\n","\n","\n","1.   pretrain\n","2.   train with a grid search on hyperparameters\n","3.   test\n","\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3852,"status":"ok","timestamp":1655892673958,"user":{"displayName":"Sebastiaan van Rijk","userId":"00934696021042774756"},"user_tz":-120},"id":"BF6Tah149mA9","outputId":"d3698486-bd77-4898-8e0e-15c50aecc769"},"outputs":[{"output_type":"stream","name":"stdout","text":["TensorFlow 1.x selected.\n","1.15.2\n"]}],"source":["%tensorflow_version 1.x\n","\n","import tensorflow as tf\n","print(tf.__version__)\n","\n","import os\n","os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'\n","\n","from google.colab import files\n","from google.colab import drive\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","import numpy as np"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15759,"status":"ok","timestamp":1655892714015,"user":{"displayName":"Sebastiaan van Rijk","userId":"00934696021042774756"},"user_tz":-120},"id":"awnrW_URQI0o","outputId":"4a3f8aff-4f09-49c2-8658-7eb93cc0a9d8"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive/\n"]}],"source":["drive.mount('/content/drive/', force_remount=True) "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xRCWzeovIplr"},"outputs":[],"source":["import sys\n","sys.path.append('/content/drive/MyDrive/Studie/thesis')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WZEoanUNHTc2"},"outputs":[],"source":["from PhIREGANs import PhIREGANs"]},{"cell_type":"markdown","metadata":{"id":"VGqvsntEIaH8"},"source":["### Pretraining"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"q8oYAbxef2AI","executionInfo":{"status":"ok","timestamp":1655780086535,"user_tz":-120,"elapsed":21890915,"user":{"displayName":"Sebastiaan van Rijk","userId":"00934696021042774756"}},"outputId":"1cfe6cbb-e67b-455e-bbd1-a8b309521fa3"},"outputs":[{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:99: The name tf.reset_default_graph is deprecated. Please use tf.compat.v1.reset_default_graph instead.\n","\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06f542ad10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06f542ad10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:460: The name tf.FixedLenFeature is deprecated. Please use tf.io.FixedLenFeature instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:468: The name tf.parse_single_example is deprecated. Please use tf.io.parse_single_example instead.\n","\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:541: DatasetV1.make_one_shot_iterator (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `for ... in dataset:` to iterate over a dataset. If using `tf.estimator`, return the `Dataset` object directly from your input function. As a last resort, you can use `tf.compat.v1.data.make_one_shot_iterator(dataset)`.\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:544: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\n","\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06f542ad10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06f542ad10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:108: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/sr_network.py:61: The name tf.variable_scope is deprecated. Please use tf.compat.v1.variable_scope instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/utils.py:28: The name tf.get_variable is deprecated. Please use tf.compat.v1.get_variable instead.\n","\n","WARNING:tensorflow:\n","The TensorFlow contrib module will not be included in TensorFlow 2.0.\n","For more information, please see:\n","  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md\n","  * https://github.com/tensorflow/addons\n","  * https://github.com/tensorflow/io (for I/O related ops)\n","If you depend on functionality not listed there, please file an issue.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/sr_network.py:96: The name tf.depth_to_space is deprecated. Please use tf.compat.v1.depth_to_space instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/sr_network.py:25: The name tf.get_collection is deprecated. Please use tf.compat.v1.get_collection instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/sr_network.py:25: The name tf.GraphKeys is deprecated. Please use tf.compat.v1.GraphKeys instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:114: The name tf.train.AdamOptimizer is deprecated. Please use tf.compat.v1.train.AdamOptimizer instead.\n","\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.7/tensorflow_core/python/ops/math_grad.py:1375: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:116: The name tf.global_variables_initializer is deprecated. Please use tf.compat.v1.global_variables_initializer instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:118: The name tf.train.Saver is deprecated. Please use tf.compat.v1.train.Saver instead.\n","\n","Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8ba70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8ba70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:125: The name tf.data.Iterator is deprecated. Please use tf.compat.v1.data.Iterator instead.\n","\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:125: DatasetV1.output_types (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.data.get_output_types(dataset)`.\n","WARNING:tensorflow:From /content/drive/MyDrive/Studie/thesis/PhIREGANs.py:126: DatasetV1.output_shapes (from tensorflow.python.data.ops.dataset_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.data.get_output_shapes(dataset)`.\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.7/tensorflow_core/python/data/ops/iterator_ops.py:347: Iterator.output_types (from tensorflow.python.data.ops.iterator_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.data.get_output_types(iterator)`.\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.7/tensorflow_core/python/data/ops/iterator_ops.py:348: Iterator.output_shapes (from tensorflow.python.data.ops.iterator_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.data.get_output_shapes(iterator)`.\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.7/tensorflow_core/python/data/ops/iterator_ops.py:350: Iterator.output_classes (from tensorflow.python.data.ops.iterator_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use `tf.compat.v1.data.get_output_classes(iterator)`.\n","Done.\n","Training network ...\n","Epoch: 1\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.7/tensorflow_core/python/util/tf_should_use.py:198: initialize_local_variables (from tensorflow.python.ops.variables) is deprecated and will be removed after 2017-03-02.\n","Instructions for updating:\n","Use `tf.local_variables_initializer` instead.\n","Iteration=1000, G loss=0.23661\n","Iteration=2000, G loss=0.23249\n","Iteration=3000, G loss=0.52510\n","Iteration=4000, G loss=0.27846\n","Epoch generator training loss=0.49331\n","Epoch took 570.63 seconds\n","\n","Done.\n"]},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00001/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670199190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670199190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670199190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670199190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067038e710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067038e710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00001/cnn\n","Done.\n","Epoch: 2\n","Iteration=1000, G loss=0.22351\n","Iteration=2000, G loss=0.54159\n","Iteration=3000, G loss=0.25695\n","Iteration=4000, G loss=0.19099\n","Epoch generator training loss=0.37670\n","Epoch took 603.24 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00002/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670155fd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670155fd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670155fd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670155fd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eb6e170> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eb6e170> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00002/cnn\n","Done.\n","Epoch: 3\n","Iteration=1000, G loss=0.38545\n","Iteration=2000, G loss=0.82567\n","Iteration=3000, G loss=0.25971\n","Iteration=4000, G loss=0.16416\n","Epoch generator training loss=0.33207\n","Epoch took 625.93 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00003/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670766dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670766dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670766dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670766dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670523440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670523440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00003/cnn\n","Done.\n","Epoch: 4\n","Iteration=1000, G loss=0.19792\n","Iteration=2000, G loss=0.37422\n","Iteration=3000, G loss=0.19376\n","Iteration=4000, G loss=0.38450\n","Epoch generator training loss=0.30467\n","Epoch took 620.31 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00004/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067075fb50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067075fb50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067075fb50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067075fb50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00004/cnn\n","Done.\n","Epoch: 5\n","Iteration=1000, G loss=0.19709\n","Iteration=2000, G loss=0.18431\n","Iteration=3000, G loss=0.19673\n","Iteration=4000, G loss=0.24549\n","Epoch generator training loss=0.28658\n","Epoch took 641.62 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00005/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671a9d490>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671a9d490>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671a9d490>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671a9d490>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b6084d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b6084d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00005/cnn\n","Done.\n","Epoch: 6\n","Iteration=1000, G loss=0.42089\n","Iteration=2000, G loss=0.09784\n","Iteration=3000, G loss=0.23922\n","Iteration=4000, G loss=0.32482\n","Epoch generator training loss=0.27149\n","Epoch took 663.02 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00006/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670766910>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670766910>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670766910>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670766910>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8be60> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8be60> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00006/cnn\n","Done.\n","Epoch: 7\n","Iteration=1000, G loss=0.30035\n","Iteration=2000, G loss=0.14780\n","Iteration=3000, G loss=0.15399\n","Iteration=4000, G loss=0.37137\n","Epoch generator training loss=0.25947\n","Epoch took 626.89 seconds\n","\n","Done.\n"]},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00007/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670650b90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670650b90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670650b90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670650b90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066f0cf440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066f0cf440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00007/cnn\n","Done.\n","Epoch: 8\n","Iteration=1000, G loss=0.26094\n","Iteration=2000, G loss=0.15222\n","Iteration=3000, G loss=0.17937\n","Iteration=4000, G loss=0.24185\n","Epoch generator training loss=0.24735\n","Epoch took 642.94 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00008/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eece7d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eece7d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eece7d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eece7d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f53f4d40> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f53f4d40> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00008/cnn\n","Done.\n","Epoch: 9\n","Iteration=1000, G loss=0.30489\n","Iteration=2000, G loss=0.29229\n","Iteration=3000, G loss=0.31548\n","Iteration=4000, G loss=0.12717\n","Epoch generator training loss=0.23797\n","Epoch took 645.56 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00009/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066f0a7c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066f0a7c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066f0a7c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066f0a7c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070ddd0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070ddd0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00009/cnn\n","Done.\n","Epoch: 10\n","Iteration=1000, G loss=0.14372\n","Iteration=2000, G loss=0.22711\n","Iteration=3000, G loss=0.18219\n","Iteration=4000, G loss=0.09910\n","Epoch generator training loss=0.22576\n","Epoch took 652.23 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00010/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671fd2a90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671fd2a90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671fd2a90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671fd2a90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb170> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb170> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00010/cnn\n","Done.\n","Epoch: 11\n","Iteration=1000, G loss=0.16985\n","Iteration=2000, G loss=0.25366\n","Iteration=3000, G loss=0.16473\n","Iteration=4000, G loss=0.19591\n","Epoch generator training loss=0.21492\n","Epoch took 651.27 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00011/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06718b3110>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06718b3110>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06718b3110>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06718b3110>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06705a14d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06705a14d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00011/cnn\n","Done.\n","Epoch: 12\n","Iteration=1000, G loss=0.10737\n","Iteration=2000, G loss=0.11992\n","Iteration=3000, G loss=0.29080\n","Iteration=4000, G loss=0.29193\n","Epoch generator training loss=0.20624\n","Epoch took 658.28 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00012/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b64a510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b64a510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b64a510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b64a510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701cb440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701cb440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00012/cnn\n","Done.\n","Epoch: 13\n","Iteration=1000, G loss=0.15977\n","Iteration=2000, G loss=0.58957\n","Iteration=3000, G loss=0.08606\n","Iteration=4000, G loss=0.18080\n","Epoch generator training loss=0.19802\n","Epoch took 654.67 seconds\n","\n","Done.\n"]},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00013/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e2ed790>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e2ed790>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e2ed790>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e2ed790>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec48710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec48710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00013/cnn\n","Done.\n","Epoch: 14\n","Iteration=1000, G loss=0.18386\n","Iteration=2000, G loss=0.15095\n","Iteration=3000, G loss=0.33053\n","Iteration=4000, G loss=0.10576\n","Epoch generator training loss=0.18865\n","Epoch took 645.32 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00014/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b790b10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b790b10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b790b10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b790b10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670045a70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670045a70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00014/cnn\n","Done.\n","Epoch: 15\n","Iteration=1000, G loss=0.26958\n","Iteration=2000, G loss=0.31549\n","Iteration=3000, G loss=0.14619\n","Iteration=4000, G loss=0.17975\n","Epoch generator training loss=0.18099\n","Epoch took 659.48 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00015/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eafdb90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eafdb90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eafdb90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eafdb90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671a72830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671a72830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00015/cnn\n","Done.\n","Epoch: 16\n","Iteration=1000, G loss=0.22806\n","Iteration=2000, G loss=0.13462\n","Iteration=3000, G loss=0.10638\n","Iteration=4000, G loss=0.15662\n","Epoch generator training loss=0.17320\n","Epoch took 669.36 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00016/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e900e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e900e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e900e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e900e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4cd40> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4cd40> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00016/cnn\n","Done.\n","Epoch: 17\n","Iteration=1000, G loss=0.18117\n","Iteration=2000, G loss=0.12812\n","Iteration=3000, G loss=0.08493\n","Iteration=4000, G loss=0.30226\n","Epoch generator training loss=0.16558\n","Epoch took 666.65 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00017/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067066b690>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067066b690>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067066b690>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067066b690>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06704d1950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06704d1950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00017/cnn\n","Done.\n","Epoch: 18\n","Iteration=1000, G loss=0.08721\n","Iteration=2000, G loss=0.12731\n","Iteration=3000, G loss=0.12077\n","Iteration=4000, G loss=0.12768\n","Epoch generator training loss=0.15936\n","Epoch took 655.65 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00018/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e888e90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e888e90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e888e90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e888e90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701cb830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701cb830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00018/cnn\n","Done.\n","Epoch: 19\n","Iteration=1000, G loss=0.13139\n","Iteration=2000, G loss=0.27301\n","Iteration=3000, G loss=0.17718\n","Iteration=4000, G loss=0.08130\n","Epoch generator training loss=0.15372\n","Epoch took 663.52 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00019/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671f70e10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671f70e10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671f70e10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671f70e10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b481950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b481950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00019/cnn\n","Done.\n","Epoch: 20\n","Iteration=1000, G loss=0.13688\n","Iteration=2000, G loss=0.15969\n","Iteration=3000, G loss=0.10563\n","Iteration=4000, G loss=0.11133\n","Epoch generator training loss=0.14788\n","Epoch took 675.68 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00020/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671ca1290>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671ca1290>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671ca1290>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671ca1290>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06719608c0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06719608c0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00020/cnn\n","Done.\n","Epoch: 21\n","Iteration=1000, G loss=0.10960\n","Iteration=2000, G loss=0.17415\n","Iteration=3000, G loss=0.13367\n","Iteration=4000, G loss=0.21527\n","Epoch generator training loss=0.14346\n","Epoch took 647.74 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00021/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c94350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c94350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c94350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c94350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b5b1b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b5b1b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00021/cnn\n","Done.\n","Epoch: 22\n","Iteration=1000, G loss=0.19017\n","Iteration=2000, G loss=0.23990\n","Iteration=3000, G loss=0.13573\n","Iteration=4000, G loss=0.11646\n","Epoch generator training loss=0.13901\n","Epoch took 693.69 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00022/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ee72cd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ee72cd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ee72cd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ee72cd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6f80> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6f80> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00022/cnn\n","Done.\n","Epoch: 23\n","Iteration=1000, G loss=0.10130\n","Iteration=2000, G loss=0.08995\n","Iteration=3000, G loss=0.17527\n","Iteration=4000, G loss=0.25929\n","Epoch generator training loss=0.13473\n","Epoch took 673.69 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00023/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670647990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670647990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670647990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670647990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067199e710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067199e710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00023/cnn\n","Done.\n","Epoch: 24\n","Iteration=1000, G loss=0.10454\n","Iteration=2000, G loss=0.06242\n","Iteration=3000, G loss=0.15299\n","Iteration=4000, G loss=0.11048\n","Epoch generator training loss=0.13040\n","Epoch took 658.45 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00024/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670678c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670678c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670678c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670678c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb050> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb050> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00024/cnn\n","Done.\n","Epoch: 25\n","Iteration=1000, G loss=0.09204\n","Iteration=2000, G loss=0.07787\n","Iteration=3000, G loss=0.07925\n","Iteration=4000, G loss=0.08346\n","Epoch generator training loss=0.12680\n","Epoch took 690.58 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00025/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06703ff250>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06703ff250>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06703ff250>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06703ff250>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06707e9830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06707e9830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00025/cnn\n","Done.\n","Epoch: 26\n","Iteration=1000, G loss=0.06833\n","Iteration=2000, G loss=0.13495\n","Iteration=3000, G loss=0.10760\n","Iteration=4000, G loss=0.08883\n","Epoch generator training loss=0.12387\n","Epoch took 701.10 seconds\n","\n","Done.\n"]},{"data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00026/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e987d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e987d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e987d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e987d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671960710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671960710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00026/cnn\n","Done.\n","Epoch: 27\n","Iteration=1000, G loss=0.08542\n","Iteration=2000, G loss=0.08984\n","Iteration=3000, G loss=0.09371\n","Iteration=4000, G loss=0.13687\n","Epoch generator training loss=0.12039\n","Epoch took 697.30 seconds\n","\n","Done.\n"]},{"data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAagAAAEYCAYAAAAJeGK1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deXhc5Xn38e+tfbUkS7Isy4u84QW8AGbfY5tAcIAmaQhN80ITSkhKSK62JLTJ1aSkS5r3bZoFmkISUpqQUkpCy5YECIR9sewYr9gYI1uSZUvWZu3r/f4xIzFWJFu2NZozmt/nunRpznOOztw6jPXjOec5zzF3R0REJGiSYl2AiIjISBRQIiISSAooEREJJAWUiIgEkgJKREQCSQElIiKBpIASEZFAUkBJwjOztoivATPrjFj+eKzrOxFmVmlma2Jdh8jJSIl1ASKx5u45g6/NrBK4yd2fiV1FR2dmKe7eF+/vIXIs6kGJjMLMkszsDjN7x8wazOwhM5saXlduZm5mf2JmVWbWZGa3mNlZZrbZzJrN7K6Ifd1oZi+b2V1m1mJmb5nZ6oj1eWb2IzOrNbMaM/s7M0se9rP/YmYNwNfMbL6ZPRuu65CZPWBm+eHtfwLMBh4L9wK/aGaXmln1sN9vqJdlZl8zs4fN7Kdmdhi48Wg1iUwEBZTI6D4HXAtcAswAmoC7h21zDrAQuA74NvBlYA1wKvBRM7tk2LbvAEXAV4FfDAYe8O9AH7AAOB24HLhp2M/uAUqAvwcM+MdwXUuAWcDXANz9E8A+4IPunuPu3xzj73sN8DCQDzwwhppEokoBJTK6W4Avu3u1u3cTCoCPmFnkqfGvu3uXuz8FtAP/6e517l4DvEjoD/ugOuDb7t7r7v8F7ASuMrMS4APAF9y93d3rgH8BPhbxs/vd/Xvu3ufune6+292fdvdud68HvkUoSE/Gq+7+P+4+AEwZQ00iUaVrUCKjmwM8YmYDEW39hHoxgw5GvO4cYTknYrnGj5ydeS+hHtAcIBWoNbPBdUlAVcS2ka8Jh9p3gIuA3PD2TWP6rUYX+R5jqUkkqhRQIqOrAj7p7i8PX2Fm5SewvzIzs4iQmg08Gn6fbqDoKAMThj924B/CbcvcvdHMrgXuOsr27UBWRP3JQPFR3mMsNYlElU7xiYzu34C/N7M5AGZWbGbXnMT+pgG3mVmqmf0hoWtHT7p7LfAU8M9mNiU8OGP+sOtXw+UCbUCLmZUBtw9bfxCYF7G8C8gws6vMLBX4CpA+2s5PsCaRcaWAEhnddwj1cJ4ys1bgNUKDFU7U64QGVBwiNNDhI+7eEF73f4A0YDuhU3UPA6VH2dffAmcALcATwC+Grf9H4Cvh0YR/6e4twGeBHwI1hHpU1Rzd8dYkMq5MDywUiT4zu5HQ/VUXxroWkXihHpSIiASSAkpERAJJp/hERCSQ1IMSEZFAirv7oIqKiry8vDzWZYiIyDjZsGHDIXcffl9e/AVUeXk5FRUVsS5DRETGiZntHaldp/hERCSQFFAiIhJICigREQkkBZSIiASSAkpERAJJASUiIoGkgBIRkUBSQImISCApoEREJJAUUCIiEkgKKBERCSQFlIiIBJICSkREAkkBJSIigaSAEhGRQFJAiYhIICmgREQkkBRQIiISSAooEREJJAWUiIgEkgJKREQCSQElIiKBpIASEZFAUkCJiEggKaBERCSQFFAiIhJICigREQkkBZSIiASSAkpERAJJASUiIoEU1YAysyvMbKeZ7TazO0ZYf6OZ1ZvZpvDXTdGsR0RE4kdKtHZsZsnA3cBaoBpYb2aPuvv2YZv+l7vfGq06REQkPkWzB3U2sNvd97h7D/AgcE0U309ERCaRaAZUGVAVsVwdbhvuw2a22cweNrNZI+3IzG42swozq6ivr49GrSIiEjCxHiTxGFDu7suBp4H7R9rI3e9191Xuvqq4uPik3nBTVTO/2XHwpPYhIiLRF82AqgEie0Qzw21D3L3B3bvDiz8EzoxiPQB89zdv87XHtuHu0X4rERE5CdEMqPXAQjOba2ZpwMeARyM3MLPSiMWrgR1RrAeANUtKqGrs5O26tmi/lYiInISoBZS79wG3Ar8mFDwPufs2M7vTzK4Ob3abmW0zszeB24Abo1XPoNVLpgHw9Had5hMRCTKLt1Ndq1at8oqKipPaxzV3vURSkvHIZy8Yp6pEROREmdkGd181vD3WgyRiYs2SEjZVNVPX2hXrUkREZBSJGVBLS3CH596qi3UpIiIyioQMqMXTcynLz+Tp7QooEZGgSsiAMjPWLi3hpd31dPb0x7ocEREZQUIGFIRG83X1DvDy7kOxLkVEREaQsAF1ztxCctJTeEazSoiIBFLCBlRaShKXLCrmmR11DAzE11B7EZFEkLABBbB2SQmH2rrZXNMS61JERGSYhA6oSxcVk5xkPKNZJUREAiehAyo/K42zygt0HUpEJIASOqAgNKvEWwdaqWrsiHUpIiISIeEDau3SEgD1okREAibhA2pOYTYLp+UooEREAibhAwpg9ZISXt/TSEtnb6xLERGRMAUUsHbpNPoGnOd31ce6FBERCVNAAStnFVCYnabh5iIiAaKAApKTjPctnsZzO+vo7R+IdTkiIoICasiapSW0dvWxvrIx1qWIiAgKqCEXLSwiLSWJZ/SMKBGRQFBAhWWlpXDhgiKe3nEAd00eKyISawqoCGuWlFDV2MnbdW2xLkVEJOEpoCKsXjINgKc1mk9EJOYUUBFKpmSwYmaeZpUQEQkABdQwq5eUsKmqmbrWrliXIiKS0BRQw6xZUoI7PPeWRvOJiMSSAmqYJaW5lOVn8rSGm4uIxJQCahgzY82Saby0u56u3v5YlyMikrAUUCNYs7SErt4BXt59KNaliIgkrKgGlJldYWY7zWy3md1xlO0+bGZuZquiWc9YnTO3kJz0FI3mExGJoagFlJklA3cDVwJLgevNbOkI2+UCnwdej1YtxystJYlLFhXzzI46BgY0q4SISCxEswd1NrDb3fe4ew/wIHDNCNt9HfgnIFDjutcuKaG+tZvNNS2xLkVEJCFFM6DKgKqI5epw2xAzOwOY5e5PHG1HZnazmVWYWUV9/cQ8VPDSRcUkJ5meESUiEiMxGyRhZknAt4C/ONa27n6vu69y91XFxcXRLw7Iz0pj1ZwCXYcSEYmRaAZUDTArYnlmuG1QLnAa8FszqwTOBR4NykAJgLVLS3jrQCtVjR2xLkVEJOFEM6DWAwvNbK6ZpQEfAx4dXOnuLe5e5O7l7l4OvAZc7e4VUazpuKxeUgKgXpSISAxELaDcvQ+4Ffg1sAN4yN23mdmdZnZ1tN53PM0tymbBtBwFlIhIDKREc+fu/iTw5LC2vxll20ujWcuJWrOkhB++uIfDXb1MyUiNdTkiIglDM0kcw9ql0+gbcJ7fOTGjB0VEJEQBdQwrZxVQmJ2mhxiKiEwwBdQxJCcZVy6bzpNbaqmobIx1OSIiCUMBNQa3v38xMwsy+ewDG/UgQxGRCaKAGoO8zFTu+cQqWrv6uPWB39HbPxDrkkREJj0F1Bgtmp7LNz68jDcqG/mHJ3fEuhwRkUkvqsPMJ5trVpaxqaqZH79cycpZ+VyzsuzYPyQiIidEPajj9NcfWMLZ5VO54+dbeOvA4ViXIyIyaSmgjlNqchJ3ffx0cjNS+PRPNtDS2RvrkkREJiUF1AmYlpvBv378DGqaOvmLhzbpoYYiIlGggDpBq8qn8pWrlvDMjjrufm53rMsREZl0FFAn4Ybzy7l25Qy+9cwufruzLtbliIhMKgqok2Bm/OOHlrOoJJfPP7hJz40SERlHCqiTlJmWzD2fOJMBdz79kw109fbHuiQRkUlBATUO5hRm8+3rVrK99jBffmQr7ho0ISJyshRQ42T1khJuW72Qn2+s5oHX98W6HBGRuKeAGkdfWL2QSxcV87ePbWPjvqZYlyMiEtcUUOMoKcn49nUrmZ6XwWd/upH61u5YlyQiErcUUOMsPyuN73/8TJo6erjlpxtobO+JdUkiInFJARUFp5Xl8a2PrmRLTQtXffdFNuzV6T4RkeOlgIqSq5aX8ovPnE9KsnHdPa9y30vvanSfiMhxUEBF0WlleTz+uYu4bPE07nx8O599YCOtXZpcVkRkLBRQUZaXmcq9nziTv7pyMU9tP8jVd73Mjlo9pkNE5FgUUBPAzPj0JfP5zz89l/buPq69+2X+u6Iq1mWJiATamALKzLLNLCn8+hQzu9rMUqNb2uRz9typPHHbRZwxu4DbH97MFx9+U1MjiYiMYqw9qBeADDMrA54CPgH8e7SKmsyKc9P56U3ncOtlC3ioopo/+NdXePdQe6zLEhEJnLEGlLl7B/Ah4F/d/Q+BU6NX1uSWnGT85fsX8eMbz6K2pZOrv/cSv9paG+uyREQCZcwBZWbnAR8Hngi3JUenpMRx2eJpPP65C5lXnM0tP93I1x/fTm//QKzLEhEJhLEG1BeAvwIecfdtZjYPeO5YP2RmV5jZTjPbbWZ3jLD+FjPbYmabzOwlM1t6fOXHv5kFWTx0y3nccN4cfvTSu3zk+6/w2p6GWJclIhJzdrw3j4YHS+S4+1HHSptZMrALWAtUA+uB6919e8Q2Uwb3Y2ZXA5919yuOtt9Vq1Z5RUXFcdUcLx57cz9ff3w7da3dXLCgkD9fewpnzpka67JERKLKzDa4+6rh7WMdxfczM5tiZtnAVmC7md1+jB87G9jt7nvcvQd4ELgmcoNhIZcNJPRUCx9cMYMXvngZX7lqCTsPtPLh77/KDfe9waaq5liXJiIy4cZ6im9pOEyuBX4JzCU0ku9oyoDIm32qw21HMLM/M7N3gG8Ct420IzO72cwqzKyivr5+jCXHp4zUZG66aB4vfPEyvnTFYt6sbubau1/mpvvXs7WmJdbliYhMmLEGVGr4vqdrgUfdvZdx6u24+93uPh/4EvCVUba5191Xufuq4uLi8XjbwMtKS+Ezl87nxS9exl9efgpvvNvIuu+9xC0/2cBbBzQThYhMfmMNqHuASkKn4V4wsznAsf5K1gCzIpZnhttG8yChAJQIuRmp3Pq+hbz4pffx+dULeXn3Ia78zovc+rON7K5ri3V5IiJRc9yDJIZ+0CzF3fuOtp7QIInVhIJpPfBH7r4tYpuF7v52+PUHga+OdKEs0mQeJDEWzR09/ODFPfz45Uq6evu5ZmUZt61eyNyi7FiXJiJyQkYbJJEyxh/OA74KXBxueh64Exj1ooi795nZrcCvCd0zdV94iPqdQIW7PwrcamZrgF6gCbjhOH6nhJSflcbt71/MJy+Yy70v7OH+Vyv53001XHlaKTddNJfTZxfEukQRkXExph6Umf2c0Oi9+8NNnwBWuPuHoljbiBK9BzVcXWsXP365kp++tpfWrj7OLp/Kn148j9WLp5GUZLEuT0TkmEbrQY01oDa5+8pjtU0EBdTI2rr7eGh9FT966V1qmjuZV5TNTRfN40NnlJGRqkk/RCS4Tuo+KKDTzC6M2NkFQOd4FScnLyc9hU9eOJfnb7+U715/Olnpyfz1I1u44BvP8p1n3qaxvSfWJYqIHJex9qBWAP8B5IWbmoAb3H1zFGsbkXpQY+PuvLankR+8uIdn36ojIzWJj5w5k09dOE8DKkQkUE7qFF/ETqZAaAYIM/uCu397HGscEwXU8Xv7YCs/fPFdHvldDb0DA1y+tISbLprHqjkFmOk6lYjE1rgE1LAd7nP32Sdd2XFSQJ24utYu/uOVvfzktb20dPYya2omVy2bwbrlpZw6Y4rCSkRiIhoBVeXus4695fhSQJ28jp4+Ht9cy+Oba3l59yH6B5y5RdmsW17KuuUzWDQ9N9YlikgCUQ9KRtTY3sOvth7g8c37eW1PAwMOC6flsG75DNatKGV+cU6sSxSRSe6EAsrMWhl5zj0DMt19TDf6jicFVPTUt3bzy62hntX6ykbcYUnpFNYtL+WDy2cwuzAr1iWKyCQ07j2oWFFATYwDLV08uaWWxzbv53f7Qo/7WD4zj3XLS7lq+QzK8jNjXKGITBYKKDlh1U0dPLkl1LPaXB2a3erMOQWsW17KB5aVUjIlI8YVikg8U0DJuNjb0D40wGJH7WHM4OzyqaxbMYMrT5tOUU56rEsUkTijgJJxt7uujSc2h04D7q5rI8ng/PlFrFteyhWnTSc/Ky3WJYpIHFBASdS4OzsPtvL4m7U8vnk/lQ0dpCQZFy4s4qplpVx8SrFOA4rIqBRQMiHcnW37D/PY5v08sbmW6qbQlI3zirI5b34h580v5Nx5hToVKCJDFFAy4QbD6tV3Gnh1TwNvvNtIW3foGZenlORw/vwizp1XyLnzpup0oEgCU0BJzPX1D7ClpoVX9zTw6jsNrK9spKt3ADNYMn0K580v5Pz5hZw1dypTMlJjXa6ITBAFlAROT98Ab1Y38+o7DbzyziE27mump2+A5CTj/PmFrFteyvtP1WALkclOASWB19Xbz8Z9Tbyw6xBPbNlPVWMnqcnGRQuLWbe8lLVLS8hVz0pk0lFASVxxdzZXt/B4eLDF/pYu0lKSuPSUYtatmMHqxdPITp/wmbZEJAoUUBK3Bgac31U18dibtTy5pZa61m4yUpNYvbiEdctLuWzxND3WXiSOKaBkUugfcNZXNvL45v38cssBGtp7yE5LZs3SEq44dToXn1KsnpVInFFAyaTT1z/Aa3tCYfWrbQdo7uglLSWJixYUcfmpJaxeUqL7rUTigAJKJrW+/gHWVzbx1PYDPLXtIDXNnZjBmbMLuPzUEi5fOp3youxYlykiI1BAScJwd7bXHubp7Qd5attBttceBkI3B1++dDprl5awfGaeHnEvEhAKKElYVY0dobDafoD1lU30DzjTp2SwZuk0Ll5YzDnzCsnL1PB1kVhRQIkATe09PPtWHU9tP8ALuw7R2duPGZw2Iy80V+C80EwWORpoITJhFFAiw3T39bNpXzOvhOcK3LSvmZ7+0EwWy2fmcd68Qs6fX8SZcwrITNMwdpFoUUCJHENnT2gmi8GplzZXt9A34KQmG6fPKuDc8FyBK2fl674rkXEUk4AysyuA7wDJwA/d/RvD1v85cBPQB9QDn3T3vUfbpwJKJkp7dx/rKxuHJrfdWtPCgENqsnHqjDzOnFMw9KXnXYmcuAkPKDNLBnYBa4FqYD1wvbtvj9jmMuB1d+8ws88Al7r7dUfbrwJKYqWls5f17zayYV8TG/Y28WZVM919AwCU5WcOhdUZswtYUppLSnJSjCsWiQ+jBVQ0rwSfDex29z3hAh4ErgGGAsrdn4vY/jXgj6NYj8hJyctMZc3SEtYsLQFCs7HvqD3Mhr1NbNjXxBvvNvLom/sByExNZsWsyF7WVI0UFDlO0QyoMqAqYrkaOOco238K+OVIK8zsZuBmgNmzZ49XfSInJS0liRWz8lkxK59PMheA/c2dVOxtYuPeUC/r357fQ/+Ak2Rw6ow8zp9fyLnzCzmrXCMFRY4lEP9CzOyPgVXAJSOtd/d7gXshdIpvAksTOS4z8jO5Oj+Tq1fMAKCjp49NVc28tqeR195p4L6X3+WeF/aQnGSsmDk4tF0jBUVGEs2AqgFmRSzPDLcdwczWAF8GLnH37ijWIzLhstJSOH9+EefPL4K1oZGCG/Y28co7h3h1TwP/9vwe7n7uHdKSk1g5Oz88tL2QlbPzSU9RYElii+YgiRRCgyRWEwqm9cAfufu2iG1OBx4GrnD3t8eyXw2SkMmkbXCk4DvhkYL7W3CHjNQkVs7KH7qGdfqsAgqy9WRhmZwmfJCEu/eZ2a3ArwkNM7/P3beZ2Z1Ahbs/CvxfIAf47/C8aPvc/epo1SQSNDnpKVy2aBqXLZoGhEYKvvFuKLA27G3knuf30DcQ+p/I+cXZRwxtn1eUQ1KS5hOUyUs36ooEWGdPP29WN7NhcODFviaaO3qB0KjCM2aHellnzClgxcx8PQtL4lIshpmLyEnKTEvm3HmFnDuvEAjN1L7nUPt7gbW3ied21gOQnGQsKc3lzNmhwDpzTgFl+ZmatV3ilnpQInGupaOXjVVNbKhsYuO+JjZVNdPR0w9AyZT0oZuHz5xTwKkz8khL0Q3EEizqQYlMUnlZqUdcx+rrH+CtA61sDM94sWFvE09uOQBAekoSy2fmhXpY4Z6WnjosQaUelEgCOHi4a+iU4IZ9TWytaaG3P/Rvf9bUTJaV5XHqjDyWlYW+NGJQJpJ6UCIJrGRKBlcuK+XKZaUAdPX2s7WmhYq9TWypbmFLTctQLwtCcwsuK8vjtLIpnBYOrUL1tGSCKaBEElBGajKryqeyqnzqUFtLRy9b97ewtSYUWFtrWvjVtvdCa0ZeBqeV5Q0F1mlleRTnKrQkehRQIgKErmVdsKCICxYUDbW1dPayff/h90JrfwtP7zjI4JWB6VMGQ2vK0OnBaXr0iIwTBZSIjCovMzU0X+D8wqG21q5QaG2paWFb+Ptv3novtKblph/R01pWlkfJlHQNd5fjpoASkeOSm5HKOfMKOWfee6HV3t3H9trDR5we/O3OOsKTYFCUk86S0lzmFGZRXpgd+irKYmZBlp5OLKNSQInISctOT+Gs8qmcFXFNq6Onjx21rUOh9XZdG4+9WUtLZ+/QNmYwIy+T8qIs5hRmUz4YYEXZzJ6q8Ep0CigRiYqstJSheQMjNXf0UNnQQeWhdiob2tnb0EFlQzu/3FJLU0fvEduW5WeysCSHRSW5LCzJZVFJLgum5ejRJAlCASUiEyo/K42VWWmsnJX/e+taOnrZ29g+FGDv1Lex62Abr+xuoKd/AAj1umZPzWLhtFwWTc/hlJJcTinJZV5xth5RMskooEQkMPKyUlmelc/ymUeGV1//AHsbO9h1oJVdB9vYdbCVnQdbeW5nHf3hC13JSUZ5YRYLpuVQXpTN3MLs0GnDoixKcjM083scUkCJSOClJCcxvziH+cU5XLnsvfbuvn7ePdQeCq0Drew62MrbdW08+1bd0EwZEHq+1pyp2aFBGkXhQRqFWcwpyqZ0isIrqBRQIhK30lOSWTx9CounT4EV77X3Dzj7mzupbAidLtx7KPT93UPt/HZXPT19A0PbpqUkMasgkxn5mZTmZVCal8mM/MHvoddZafpTGQs66iIy6SQnGbOmZjFrahYXLTxyXf+Ac+Bw11BoVTa0s6+hg9qWTt460Mqhtm6GT1Gal5lKaV7GUIgND7PpeRm6/hUFCigRSSjJSUZZfiZl+Zmcv+D31/f0DXDwcBf7mzupbelif0sntc1d1LZ0sr+5i9/ta/q90YYARTlplOYNC7D8TGaEv5fkppOSrEedHA8FlIhIhLSUpKHe12g6e/qpbQkHWDjIBgOssqGdV99poLW774ifSbLQpL2zp2Yxtyj7vfu+ikLXxnQa8ffpiIiIHKfMtGTmFecwrzhn1G1au3qPDLDmTqqbO9nb0MEzOw5yqK3niO2n5aYPzbAxJzzbxpzCLOYUZpGTnpKQU0UpoEREoiA3I5XcjFROKckdcX1rV+/QTcp7I25cfm5nPfWt1Udsm5GaRGF2OoU5aRRmp1GYE/E63F6Uk87U7DSmZqdNmhk4FFAiIjGQm5E6NKnucO3dfUPhVdXYQUN7D4faumlo66G+rZudB1o51N5zxGjEI/adnkJhTiisCnPSKcoJBVloORRmg+unZqUF9tqYAkpEJGCy01NYOmMKS2dMGXUbd6etu4+Gth4a2ntoaOumob2HxvYe6lu7aWzvoaG9m6rGDjZVNdPY3jN0U/NwBVmpFOakM31Kxu8N7hj8npM+8XGhgBIRiUNmNnQasbwo+5jbDww4LZ29R4TZe99DPbTali5eeLueutbfH2qfm5HCjLxMSgfvEQsH1zlzpx51QMnJUECJiCSApCSjIDuNguw0FkwbfXAHQG9/aKj98EEe+8OjFbdUt9DQHhrk8a2PrlBAiYjIxEhNTmJmQeh5XaPp6u3nQEsXBVlpUatDASUiIsctIzV5TKcWT0Ywh26IiEjCU0CJiEggRTWgzOwKM9tpZrvN7I4R1l9sZhvNrM/MPhLNWkREJL5ELaDMLBm4G7gSWApcb2ZLh222D7gR+Fm06hARkfgUzUESZwO73X0PgJk9CFwDbB/cwN0rw+tGvh1aREQSVjRP8ZUBVRHL1eG242ZmN5tZhZlV1NfXj0txIiISbHExSMLd73X3Ve6+qri4ONbliIjIBIhmQNUAsyKWZ4bbREREjimaAbUeWGhmc80sDfgY8GgU309ERCaRqAWUu/cBtwK/BnYAD7n7NjO708yuBjCzs8ysGvhD4B4z2xatekREJL5Edaojd38SeHJY299EvF5P6NSfiIjIEeJikISIiCQeBZSIiASSAkpERAJJASUiIoGkgBIRkUBSQImISCApoEREJJAUUCIiEkgKKBERCSQFlIiIBJICSkREAkkBJSIigaSAEhGRQFJAiYhIICmgREQkkBRQIiISSAooEREJJAWUiIgEkgJKREQCSQElIiKBpIASEZFAUkCJiEggKaBERCSQFFAiIhJICigREQkkBZSIiASSAkpERAJJASUiIoEU1YAysyvMbKeZ7TazO0ZYn25m/xVe/7qZlUezHhERiR9RCygzSwbuBq4ElgLXm9nSYZt9Cmhy9wXAvwD/FK16REQkvkSzB3U2sNvd97h7D/AgcM2wba4B7g+/fhhYbWYWxZpERCROpERx32VAVcRyNXDOaNu4e5+ZtQCFwKHIjczsZuDm8GKbme2MWF00fPsEpGMQouOgYwA6BoPi6TjMGakxmgE1btz9XuDekdaZWYW7r5rgkgJFxyBEx0HHAHQMBk2G4xDNU3w1wKyI5ZnhthG3MbMUIA9oiGJNIiISJ6IZUOuBhWY218zSgI8Bjw7b5lHghvDrjwDPurtHsSYREYkTUTvFF76mdCvwayAZuM/dt5nZnUCFuz8K/Aj4iZntBhoJhdjxGvHUX4LRMQjRcdAxAB2DQXF/HEwdFhERCSLNJCEiIoGkgBIRkUCK24A61jRKicLMKs1si5ltMrOKWNczEczsPjOrM7OtEW1TzexpM3s7/L0gljVOhFGOw9fMrCb8eYBEHXUAAAPeSURBVNhkZh+IZY3RZmazzOw5M9tuZtvM7PPh9oT5PBzlGMT9ZyEur0GFp1HaBawldAPweuB6d98e08JiwMwqgVXuHi835J00M7sYaAP+w91PC7d9E2h092+E/4elwN2/FMs6o22U4/A1oM3d/18sa5soZlYKlLr7RjPLBTYA1wI3kiCfh6Mcg48S55+FeO1BjWUaJZmk3P0FQqM+I0VOm3U/oX+gk9ooxyGhuHutu28Mv24FdhCaoSZhPg9HOQZxL14DaqRplCbFf5AT4MBTZrYhPCVUoipx99rw6wNASSyLibFbzWxz+BTgpD21NVz4aQinA6+ToJ+HYccA4vyzEK8BJe+50N3PIDRr/J+FT/sktPDN3vF37np8fB+YD6wEaoF/jm05E8PMcoCfA19w98OR6xLl8zDCMYj7z0K8BtRYplFKCO5eE/5eBzxC6PRnIjoYPhc/eE6+Lsb1xIS7H3T3fncfAH5AAnwezCyV0B/mB9z9F+HmhPo8jHQMJsNnIV4DaizTKE16ZpYdviiKmWUDlwNbj/5Tk1bktFk3AP8bw1piZvCPctgfMMk/D+HH8/wI2OHu34pYlTCfh9GOwWT4LMTlKD6A8JDJb/PeNEp/H+OSJpyZzSPUa4LQtFU/S4TjYGb/CVxK6HECB4GvAv8DPATMBvYCH3X3ST2AYJTjcCmhUzoOVAKfjrgWM+mY2YXAi8AWYCDc/NeErsEkxOfhKMfgeuL8sxC3ASUiIpNbvJ7iExGRSU4BJSIigaSAEhGRQFJAiYhIICmgREQkkBRQIlFmZv0RM0pvGs/Z982sPHI2c5HJJGqPfBeRIZ3uvjLWRYjEG/WgRGIk/Cyvb4af5/WGmS0It5eb2bPhST5/Y2azw+0lZvaImb0Z/jo/vKtkM/tB+FlAT5lZZsx+KZFxpIASib7MYaf4rotY1+Luy4C7CM2MAvA94H53Xw48AHw33P5d4Hl3XwGcAWwLty8E7nb3U4Fm4MNR/n1EJoRmkhCJMjNrc/ecEdorgfe5+57wZJ8H3L3QzA4RegBdb7i91t2LzKwemOnu3RH7KAeedveF4eUvAanu/nfR/81Eoks9KJHY8lFeH4/uiNf96NqyTBIKKJHYui7i+6vh168QmqEf4OOEJgIF+A3wGQAzSzazvIkqUiQW9H9aItGXaWabIpZ/5e6DQ80LzGwzoV7Q9eG2zwE/NrPbgXrgT8LtnwfuNbNPEeopfYbQg+hEJiVdgxKJkfA1qFXufijWtYgEkU7xiYhIIKkHJSIigaQelIiIBJICSkREAkkBJSIigaSAEhGRQFJAiYhIIP1/B8SBPI7YYTwAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00027/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06707cca90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06707cca90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06707cca90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06707cca90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06705d4830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06705d4830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00027/cnn\n","Done.\n","Epoch: 28\n","Iteration=1000, G loss=0.09064\n","Iteration=2000, G loss=0.18622\n","Iteration=3000, G loss=0.16597\n","Iteration=4000, G loss=0.05404\n","Epoch generator training loss=0.11762\n","Epoch took 701.62 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stdout","output_type":"stream","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00028/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06707cc590>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06707cc590>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06707cc590>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06707cc590>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6680> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6680> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00028/cnn\n","Done.\n","Epoch: 29\n","Iteration=1000, G loss=0.09324\n","Iteration=2000, G loss=0.19269\n","Iteration=3000, G loss=0.17033\n","Iteration=4000, G loss=0.16415\n","Epoch generator training loss=0.11520\n","Epoch took 707.72 seconds\n","\n","Done.\n"]},{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{},"output_type":"display_data"},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00029/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670714210>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670714210>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670714210>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670714210>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06706f08c0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06706f08c0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00029/cnn\n","Done.\n","Epoch: 30\n","Iteration=1000, G loss=0.16219\n","Iteration=2000, G loss=0.10465\n","Iteration=3000, G loss=0.11767\n","Iteration=4000, G loss=0.08074\n","Epoch generator training loss=0.11250\n","Epoch took 672.33 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00030/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ebe8710>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ebe8710>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ebe8710>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ebe8710>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f5418950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f5418950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00030/cnn\n","Done.\n","Epoch: 31\n","Iteration=1000, G loss=0.12162\n","Iteration=2000, G loss=0.07604\n","Iteration=3000, G loss=0.07419\n","Iteration=4000, G loss=0.12348\n","Epoch generator training loss=0.11018\n","Epoch took 641.08 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00031/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066f12ce10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066f12ce10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066f12ce10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066f12ce10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec52950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec52950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00031/cnn\n","Done.\n","Epoch: 32\n","Iteration=1000, G loss=0.08136\n","Iteration=2000, G loss=0.21631\n","Iteration=3000, G loss=0.20210\n","Iteration=4000, G loss=0.08312\n","Epoch generator training loss=0.10821\n","Epoch took 655.43 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00032/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b48e450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b48e450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b48e450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b48e450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06700455f0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06700455f0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00032/cnn\n","Done.\n","Epoch: 33\n","Iteration=1000, G loss=0.06817\n","Iteration=2000, G loss=0.15284\n","Iteration=3000, G loss=0.11686\n","Iteration=4000, G loss=0.09385\n","Epoch generator training loss=0.10554\n","Epoch took 620.41 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00033/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06719a06d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f06719a06d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06719a06d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f06719a06d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec4a950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ec4a950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00033/cnn\n","Done.\n","Epoch: 34\n","Iteration=1000, G loss=0.07814\n","Iteration=2000, G loss=0.05845\n","Iteration=3000, G loss=0.06120\n","Iteration=4000, G loss=0.12050\n","Epoch generator training loss=0.10470\n","Epoch took 592.16 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAagAAAEYCAYAAAAJeGK1AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3deXxddZ3/8dcn+540S9O0TZpuFEqhFNtSQARksahsjqOgOKIy/BwH0Z8z81NHZ1QcGcffzx1mYRwBGaUiCFOQsiirQG0LFEg3Wtp0TZqlbdKk2fP5/XFPwm1I0rTN7T03eT8fjz5y7znnnvs5jwN55/s93/M95u6IiIiETVK8CxARERmMAkpEREJJASUiIqGkgBIRkVBSQImISCgpoEREJJQUUCIiEkoKKBnXzKwl6l+vmbVFvf94vOs7FmZWbWYXx7sOkeOVEu8CROLJ3XP6XptZNXCDu/8+fhUNz8xS3L070b9DZCTUghIZhJklmdlXzOwtM2s0s/vMrDBYV2lmbmafMrOdZrbfzD5rZovM7HUzO2Bmt0Xt63oze8HMbjOzJjPbaGYXRa3PN7P/MrMaM9ttZv9kZskDPvtDM2sEvmlmM83sqaCuBjP7pZkVBNvfA1QADwetwP9jZheY2a4Bx9ffyjKzb5rZ/Wb232bWDFw/XE0iJ4oCSmRwnweuAs4HJgP7gdsHbHMWMBv4KPAj4GvAxcCpwEfM7PwB274FFAPfAH7bF3jAXUA3MAtYAFwK3DDgs1uBUuA7gAH/HNR1ClAOfBPA3T8B7AAud/ccd//eCI/3SuB+oAD45QhqEok5BZTI4D4LfM3dd7l7B5EA+LCZRXeLf9vd2939CaAVuNfd69x9N/A8kV/sfeqAH7l7l7v/GtgEfMDMSoH3A19091Z3rwN+CFwT9dk97v5Td+929zZ33+LuT7p7h7vXAz8gEqTH4yV3f8jde4G8EdQkEnO6BiUyuGnAg2bWG7Wsh0grps/eqNdtg7zPiXq/2w+fmXk7kRbQNCAVqDGzvnVJwM6obaNfE4Taj4HzgNxg+/0jOqqhRX/HSGoSiTkFlMjgdgKfdvcXBq4ws8pj2N8UM7OokKoAlgff0wEUDzMwYeAjB24Nlp3m7vvM7CrgtmG2bwWyoupPBkqG+Y6R1CQSc+riExncvwPfMbNpAGZWYmZXHsf+JgI3m1mqmf05kWtHj7p7DfAE8H0zywsGZ8wccP1qoFygBWgysynA3w1YvxeYEfX+TSDDzD5gZqnA14H0oXZ+jDWJjDoFlMjgfkykhfOEmR0EVhIZrHCs/kRkQEUDkYEOH3b3xmDdXwBpwHoiXXX3A2XD7OtbwJlAE/A74LcD1v8z8PVgNOHfunsT8DngZ8BuIi2qXQzvaGsSGXWmBxaKxJaZXU/k/qp3x7sWkUSiFpSIiISSAkpEREJJXXwiIhJKakGJiEgoJdx9UMXFxV5ZWRnvMkREZBS8/PLLDe4+8L48IAEDqrKykjVr1sS7DBERGQVmtn2oderiExGRUFJAiYhIKCmgREQklBRQIiISSgooEREJJQWUiIiEkgJKRERCSQElIiKhpIASEZFQUkCJiEgoKaBERCSUFFAiIhJKCigREQklBZSIiISSAkpEREJJASUiIqGkgBIRkVBSQImISCgpoEREJJQUUCIiEkoKKBERCSUFlIiIhJICSkREQkkBJSIioaSAEhGRUFJAiYhIKCmgREQklBRQIiISSgooEREJJQWUiIiEUkwDysyWmtkmM9tiZl8ZZP31ZlZvZmuDfzfEsh4REUkcKbHasZklA7cDlwC7gNVmttzd1w/Y9NfuflOs6hARkcQUyxbUYmCLu291905gGXBlDL9PRETGkFgG1BRgZ9T7XcGygf7MzF43s/vNrHywHZnZjWa2xszW1NfXx6JWEREJmXgPkngYqHT304EngbsH28jd73D3he6+sKSk5Li+8OXt+3l6Y91x7UNERGIvlgG1G4huEU0NlvVz90Z37wje/gx4VwzrAeCnT23m1kc3xPprRETkOMUyoFYDs81supmlAdcAy6M3MLOyqLdXADFPjsXTC9lc18K+1s5Yf5WIiByHmAWUu3cDNwGPEwme+9x9nZndYmZXBJvdbGbrzOw14Gbg+ljV02dxZSEAq6v3xfqrRETkOMRsmDmAuz8KPDpg2T9Gvf4q8NVY1jDQaVPzSUtJYvW2fbzv1Ekn8qtFROQoxHuQxAmXnpLMgvICVqkFJSISauMuoCByHWrdnmZaO7rjXYqIiAxhXAbUospCenqdV3bsj3cpIiIyhHEZUGdOm0BykrFqm7r5RETCalwGVE56CqdOzlNAiYiE2LgMKIh0863deYCO7p54lyIiIoMY1wHV0d3LG7ua4l2KiIgMYhwH1AQADTcXEQmpcRtQRTnpzJqYw2pdhxIRCaVxG1AQ6eZbU72fnl6PdykiIjLAuA6os6YXcrCjm421zfEuRUREBhjXAbVoemTiWA03FxEJn3EdUFMKMplSkKmZzUVEQmhcBxRE5uVbtW0/7roOJSISJuM+oBZVFtLQ0sG2htZ4lyIiIlHGfUAtnh65H0rdfCIi4TLuA2pmSQ6F2Wms2qaZzUVEwmTcB5SZsahyAquqG+NdioiIRBn3AQWR61A797VR29Qe71JERCSggCIykg80L5+ISJgooIC5ZXlkpyWzapu6+UREwkIBBaQkJ3HmtAms1kAJEZHQUEAFFlcWsmnvQQ4c6ox3KSIiggKqX991qNXVakWJiISBAiowv7yAtOQk3bArIhISCqhARmoyp0/N18zmIiIhoYCKsnh6IVW7mzjU2R3vUkRExj0FVJRF0wvp7nVe3XEg3qWIiIx7MQ0oM1tqZpvMbIuZfWWY7f7MzNzMFsayniN517QJmOkBhiIiYRCzgDKzZOB24DJgLnCtmc0dZLtc4AvAn2JVy0jlZaQytyxPASUiEgKxbEEtBra4+1Z37wSWAVcOst23gX8BQjER3qLKQl7duZ/O7t54lyIiMq7FMqCmADuj3u8KlvUzszOBcnf/3XA7MrMbzWyNma2pr68f/UqjLJ5eSHtXL1V7mmL6PSIiMry4DZIwsyTgB8DfHGlbd7/D3Re6+8KSkpKY1rWoMpg4Vt18IiJxFcuA2g2UR72fGizrkwvMA54xs2pgCbA83gMlSnLTmVGczWoFlIhIXMUyoFYDs81supmlAdcAy/tWunuTuxe7e6W7VwIrgSvcfU0MaxqRRZWFrK7eR2+vx7sUEZFxK2YB5e7dwE3A48AG4D53X2dmt5jZFbH63tGwaHohze3dbNp7MN6liIiMWymx3Lm7Pwo8OmDZPw6x7QWxrOVonNU/cew+TinLi3M1IiLjk2aSGMTUCZlMysvQQAkRkThSQA3CzFg0vZBV2/bhrutQIiLxoIAawnmzi6k72MHj62rjXYqIyLikgBrC1QumcPKkXL718HpaOjS7uYjIiaaAGkJqchLfufo0apra+dGTb8a7HBGRcUcBNYx3TZvAtYsruPPFatZp6iMRkRNKAXUEX146h4LMVL72YJVu3BUROYEUUEdQkJXG1z94Cmt3HuDe1TviXY6IyLihgBqBq86YwtkziviXFRupP9gR73JERMYFBdQImBn/dPU82rt6ufXRDfEuR0RkXFBAjdDMkhw+e/4MHnx1Ny9uaYh3OSIiY54C6ih87sJZTCvK4usPVdHR3RPvckRExjQF1FHISE3mlivnsbWhlf94dmu8yxERGdMUUEfp/JNK+ODpZdz29BaqG1rjXY6IyJilgDoG//DBuaQnJ/EP/1OlyWRFRGJEAXUMSvMy+Nv3zeH5zQ08/HpNvMsRERmTFFDH6Lol0zhtSj7ffmQ9TW1d8S5HRGTMUUAdo+Qk49arT6OxpYPvP7Ep3uWIiIw5CqjjcNrUfP7i7EruWbmdF3RvlIjIqFJAHae/ufQkZpXk8Jm7V/P85vp4lyMiMmYooI5TbkYq9964hMqibD5z9xqe3lgX75JERMYEBdQoKM5J596/XMJJpTnceM8aPSZeRGQUKKBGyYTsNH55wxJOnZzPX//yFR55fU+8SxIRSWgKqFGUn5nKf99wFgsqCrj53ld58NVd8S5JRCRhjSigzCzbzJKC1yeZ2RVmlhrb0hJTTnoKd396MUtmFPGl+17jvtU7412SiEhCGmkL6jkgw8ymAE8AnwDuilVRiS4rLYWfX7+I82aX8H8eeJ17Vm6Pd0kiIglnpAFl7n4I+BDwr+7+58CpsSsr8WWkJnPHJ97FxadM5B8equLnf9wW75JERBLKiAPKzM4GPg78LliWHJuSxo6M1GT+9ePv4rJ5k7jlkfX8+7NvxbskEZGEMdKA+iLwVeBBd19nZjOAp4/0ITNbamabzGyLmX1lkPWfNbM3zGytmf3RzOYeXfnhl5aSxE+vXcAV8yfz3RUbueXh9bR16mGHIiJHYkf7uIhgsESOuzcfYbtk4E3gEmAXsBq41t3XR22T17cfM7sC+Jy7Lx1uvwsXLvQ1a9YcVc1h0NPr3PLwOu5+aTuVRVn884dO5+yZRfEuS0QkrszsZXdfONi6kY7i+5WZ5ZlZNlAFrDezvzvCxxYDW9x9q7t3AsuAK6M3GBBy2cCYfbhScpLxrSvn8au/PAsHrv3Plfz9g2/Q3K6Z0EVEBjPSLr65QZhcBawAphMZyTecKUD0GOtdwbLDmNlfm9lbwPeAmwfbkZndaGZrzGxNfX1iz3d3zsxiHvvCe7jxPTNYtmoHl/7gOX6/fm+8yxIRCZ2RBlRqcN/TVcByd+9ilFo77n67u88Evgx8fYht7nD3he6+sKSkZDS+Nq4y05L5+/efwoOfO5eCrFRu+MUabr73VRpbOuJdmohIaIw0oP4DqCbSDfecmU0Dhr0GBewGyqPeTw2WDWUZkQAcN+aXF7D8pnfzpUtOYkVVDRf/4FkeenW3HiMvIsIIA8rdf+LuU9z9/R6xHbjwCB9bDcw2s+lmlgZcAyyP3sDMZke9/QCw+ShqHxPSUpK4+aLZPHrzeUwvzuaLv17Lp+9azZ4DbfEuTUQkrkY6SCLfzH7Qdx3IzL5PpDU1JHfvBm4CHgc2APcFQ9RvCUbsAdxkZuvMbC3wJeCTx34oiW12aS6/+ew5fOPyuazcuo+Lvv8stz21mfYuDUkXkfFpRMPMzewBIqP37g4WfQKY7+4fimFtg0rUYeZHY+e+Q9z66AZWVNUypSCTr33gFC6bNwkzi3dpIiKjarhh5iMNqLXufsaRlp0I4yGg+rz0ViPfengdG2sPsnh6Id+4fC6nTs6Pd1kiIqPmuO+DAtrM7N1ROzwX0EWSGDt7ZhG/u/k8br36NLbUtfDBn/6Rr/72dRo02k9ExoGRtqDmA78A+v583w980t1fj2FtgxpPLahoTW1d/PQPm7nrxWoyU5P5/EWzuP6c6aSl6JFeIpK4jrsF5e6vuft84HTgdHdfALx3FGuUI8jPTOXrH5zL4//7PSyaXsitj27k0h8+y5Pr92pYuoiMSUc9F1//B812uHvFKNdzROO1BTXQM5vq+PYj63mrvpWTSnO4/pzpXL1gCplpmmReRBLHcQ+SGGKnO929/Mhbji4F1Nu6enp56NXd3PlCNetrmsnPTOWaxeX8xdmVTCnIjHd5IiJHFKuAUgsqJNyd1dX7ufOFbTy+rhYz432nlnL9OdNZVDlBw9NFJLSGC6iUI3zwIIPPuWeA/kQPCTNj8fRCFk8vZPeBNn7xUjXLVu3k0TdqOXVyHtefU8nl8yeTkaruPxFJHMfcgooXtaBG5lBnNw+9uoe7XtzGm3tbKMpO42NnVXDdkmmU5mXEuzwRESBGXXzxooA6Ou7Oi281cucL2/jDxjqSzXj/aWV86txKFlRMiHd5IjLOHXMXnyQ+M+PcWcWcO6uY7Y2t3P3idn6zZifLX9vD/PICPn1uJZfNK9P9VCISOmpBjUMtHd088PIu7n6xmq0NrUzMTee6JdP42FkVFOekx7s8ERlH1MUng+rtdZ7dXM9dL1Tz7Jv1pCUncfn8yXzsrAoWlBeQlKTRfyISW+rik0ElJRkXzpnIhXMmsqWuhV+8VM39L+/igVd2MSkvg6XzJrF03iQWVRaSrLASkRNMLSg5THN7F79fv5cVVbU892Y9Hd29FOekccncSVw2bxJnzywiNVnXq0RkdKiLT45Ja0c3T2+qY0VVLU9vrONQZw/5malcfEopl82bxLtnF+veKhE5LgooOW7tXT08v7mBFVU1/H79Xprbu8nNSOEjC8v55NmVVBRlxbtEEUlACigZVZ3dvby0tZH7X97Fijdq6HHn4lNK+dQ5lZw9s0hTK4nIiCmgJGZqm9r575Xb+dWqHexr7eTkSblcf04lVy2You4/ETkiBZTEXHtXD8tf28OdL1SzoaaZgqxUrl1cwSeWTGOyZlYXkSEooOSEcXdWbdvHXS9W98+svvTUSXx8SQVnz1D3n4gcTvdByQljZpw1o4izZhSxa/8h7lm5nWWrdvK7N2qoLMrio4sq+PC7plKSqxkrRGR4akFJzLV39bCiqoZ7V+1k1bZ9pCQZl8wt5ZrFFZw3q1gzVoiMY+rik9DYUtfCr1fv4IFXdrOvtZMpBZl8dFE5H1lYzqR8PQZEZLxRQEnodHT38MS6vSxbvYMXtjSSZPDekyfyoTOncsGcErLS1PssMh7oGpSETnpKMpfPn8zl8yezvbGVZat38ps1u/j9hjoyUpM4/6QSLptXxntPmUheRmq8yxWROFALSkKju6eXVdX7eKyqlseqaqk72EFachLnzirisnllXDK3lAnZafEuU0RGkbr4JOH09jqv7tzPY1W1rKiqZdf+NpKTjCUzClk6r4xL55bq0fUiY0DcAsrMlgI/BpKBn7n7dwes/xJwA9AN1AOfdvftw+1TATX+uDvr9jSzoqqGFVW1bK1vBeDUyXlcOGciF8wp4YzyAlI0y7pIwolLQJlZMvAmcAmwC1gNXOvu66O2uRD4k7sfMrO/Ai5w948Ot18F1Pjm7myua+H3G/byzMZ6Xt6xn55eJz8zlfNmF3PhnImcP6dETwYWSRDxGiSxGNji7luDIpYBVwL9AeXuT0dtvxK4Lob1yBhgZpxUmstJpbl87oJZNLV18cfNDTy9qY5nNtXzyOs1AJw+NZ8L5kzkwjklzJ+qpwOLJKJYBtQUYGfU+13AWcNs/xlgxWArzOxG4EaAioqK0apPxoD8zFQ+cHoZHzi9jN5eZ31NM09vrOPpTXXc9tRmfvKHzUzKy+B9p5aydF4Zi6fr6cAiiSIUw8zN7DpgIXD+YOvd/Q7gDoh08Z3A0iSBJCUZ86bkM29KPp+/aDb7Wzt5elMdj1XVsmz1Tu5+aTtF2WlcGoTVOXo6sEioxTKgdgPlUe+nBssOY2YXA18Dznf3jhjWI+PMhOw0PnTmVD505lRaO7p5ZlM9K6pqWL52D/eu2kleRgoXzy3lsnllnKenA4uETiwHSaQQGSRxEZFgWg18zN3XRW2zALgfWOrum0eyXw2SkOPV93Tgx6pqeXJ9Lc3t3WSnJXPe7BIumFPCBXMmatolkRMkLoMk3L3bzG4CHicyzPzn7r7OzG4B1rj7cuD/AjnAb4LHMOxw9ytiVZMIQEZqMpfMLeWSuaV09ZzGS2818ti6Wp7ZWMdj62oBOKUsjwvmlHDhnImcWaEh7CLxoBt1RQLuzpt7W4IRgXWsqd5Pd6+Tl5HCeSeVcMFJJZw/p4SJuWpdiYwWzSQhcgya27t4IWoIe93ByCXS06bk93cFnlFeoFGBIsdBASVynNwjQ9if2VTPM5vqeHn7fnodCrJSOf+kyLWr98wuoUg3CIscFQWUyCg7cKiT5zc38Mymep59s46Glk7MYP7Ugv7pl06bkq8bhEWOQAElEkO9vU7Vniae2VTP05vqWLvzAO5QmJ3GkhmFLJlRxNkzipg1MYdgMJCIBBRQIifQvtZOnt9cz3NvNrByayO7D7QBUJyTxlkzivoDa2ZJtgJLxj0FlEicuDu79rfx0luNrNzayEtbG6lpagegJDedJTOK+ltZM4oVWDL+6Im6InFiZpQXZlFemMVHFpXj7uzYd+iwwHr4tT0ATAwC6+yZkVZWZVGWAkvGNQWUyAlkZkwrymZaUTbXLK7A3dnW0MrKrfv6A2t5EFiT8jJYMqOwP7AqChVYMr6oi08kRNydrQ2tvPRWJKz+tLWRhpZOACbnZ3BGRQEnT8rj5Em5nFKWx5SCTI0UlISmLj6RBGFmzCzJYWZJDtctmYa7s6WuhZVbG1m5dR/r9jTx6Bu1/dvnpKcwZ1IuJ0/K5eSyPE6ZlMucSbnkZqTG8ShERodaUCIJprWjmzf3HmRj7UE21jSzofYgG2qaOdje3b9NRWEWCyoKOKM88m/u5DzSUzRbu4SPWlAiY0h2egoLKiawoGJC/zJ3Z09TeySwapqp2t3Myq2N/M/ayPWstOQk5k7O44zyAhZUFLCgfALlhZm6piWhphaUyBhW09TG2h0HWLvzAK/uPMAbu5po6+oBoCg7jfnlBZxSlsvJk/I4pSyXyqJszdwuJ5RaUCLjVFl+JmWnZXLZaWUAdPf0smnvQdbuPMDaHQd4fVcTz71ZT3dv5A/VtJQkTirN6R+IMbcsjzmTcjXHoMSFWlAi41xHdw9v1bWysbaZjcH1rI21B6k/+PYDrkty05lZkk1lUTaVxZGf04uzmVaUpScRy3FRC0pEhpSekszcyXnMnZx32PKGlg42RQXWtoZWnly/l8bWzsO2K8vP6A+u6cVZ/eFVXqjwkuOjgBKRQRXnpFM8K51zZxUftry5vYvqhla2NbSyvfFQ5HVjK49V1bD/UFf/dmYwOT+TyqjQ6guyisIs0lJ0rUuGp4ASkaOSl5HK6VMLOH1qwTvWNR3qorqxlerGSIBFwusQj7xeQ1Pb2+GVZFBemBW5fysYoHHypDwqCrN047H0U0CJyKjJz0plflYB88vfGV77WzvZ1hgJreqGVrbUt7Cx9iBPrt9LMEaDrLRkTirN7Q+svgDLz9KNx+ORAkpETogJ2WlMyE7jzKj7twDaOnvYXHeQjTUH2VDbzMaag6yoquXeVTv7t8lJT6E0L52y/Ewm5WcwKS/jsJ9l+RkUZqfpvq4xRgElInGVmZb8ji5Dd6fuYAcbapp5c+9BapraqW1qp7a5nRe2NLC3ub2/1dUnLTmJ0vx0yvIyKQ1Cqz/IgvclOem6zyuBKKBEJHTMjNK8DErzMrhgzsR3rO/pdRpaOoLgaqO2qT3yujkSZK/vOsDj69rp7O497HNJFhkyP6Ug8+0h88XZTC/KprI4S3MYhowCSkQSTnLS2wHGINe7INIKO3CoKwiuNmqbOqhtaqOmqT3yEMmtjfz21d2HfaYoOy3qPq/Ic7wKs9MoyEyjICuVgqxUctJT1JV4giigRGRMMrP+614D7/Hq09bZw/Z9wcCNviHzDa38cUs9D7zSMehnUpKMgqxU8jNTmZDVF1xpTMxNj3Qr5mf2dy0WZadpVOJxUECJyLiVmZYcjBZ8Z4Ad6uxm9/42DrR1sb+1kwNtXRw41MmBQ13sP9RFU1sn+1u72H2gnardzdS3dNAz4MJYarIxMTdy/as0P4OyvAyKc9MpyIyEWkFWdMilasb5ARRQIiKDyEpLYXZp7oi37+l1GvuuiwXXwmqa2tnb3E5NUxvrdjfxhw17ae/qHXIfmanJTMhKJT8rjaLstHE/YlEBJSIyCpKTjIl5GUzMy2D+ENu4O4c6e/pbZU1tXUGLrO91J/sPRZY1tHTwwpYG6g6+s2UWPWJxYl56cJ3s8FZZflYqBUE3ZF5mKskJ2NWogBIROUHMjOz0FLLTU5hSkDmizxw+YjEYtdj89oCPdXua+wNuqLm/zSIzgBQEoXVYkGWmHhZqE7LSyElPISM1iczUZDKCf/EIuJgGlJktBX4MJAM/c/fvDlj/HuBHwOnANe5+fyzrERFJNIePWBx6u95ep7n97RbZwGtmB4IQ63u9raGVA4c6aY56EvNwUpOtP6wyUpPISEkmMy2Zez5zFvmZsRmeH7OAMrNk4HbgEmAXsNrMlrv7+qjNdgDXA38bqzpERMaDpCQLWkZpVJI94s919/TS3N4dCbUgvFo6umnv6qG9q/ftn909wevo5T2kJseuZRXLFtRiYIu7bwUws2XAlUB/QLl7dbBu6KuGIiISMynJSRRmp1GYnRbvUt4hlnN+TAF2Rr3fFSw7amZ2o5mtMbM19fX1o1KciIiEW0JMSuXud7j7QndfWFJSEu9yRETkBIhlQO3m8Et6U4NlIiIiRxTLgFoNzDaz6WaWBlwDLI/h94mIyBgSs4By927gJuBxYANwn7uvM7NbzOwKADNbZGa7gD8H/sPM1sWqHhERSSwxvQ/K3R8FHh2w7B+jXq8m0vUnIiJymIQYJCEiIuOPAkpEREJJASUiIqGkgBIRkVBSQImISCgpoEREJJQUUCIiEkoKKBERCSUFlIiIhJICSkREQkkBJSIioaSAEhGRUFJAiYhIKCmgREQklBRQIiISSgooEREJJQWUiIiEkgJKRERCSQElIiKhpIASEZFQUkCJiEgoKaBERCSUFFAiIhJKCigREQklBZSIiISSAkpEREJJASUiIqGkgBIRkVCKaUCZ2VIz22RmW8zsK4OsTzezXwfr/2RmlbGsR0REEkfMAsrMkoHbgcuAucC1ZjZ3wGafAfa7+yzgh8C/xKoeERFJLLFsQS0Gtrj7VnfvBJYBVw7Y5krg7uD1/cBFZmYxrElERBJESgz3PQXYGfV+F3DWUNu4e7eZNQFFQEP0RmZ2I3Bj8LbFzDYN8Z3FAz+bwMbSscDYOh4dS3iNpeMZS8cCQx/PtKE+EMuAGjXufgdwx5G2M7M17r7wBJQUc2PpWGBsHY+OJbzG0vGMpWOBYzueWHbx7QbKo95PDZYNuo2ZpQD5QGMMaxIRkQQRy4BaDcw2s+lmlgZcAywfsM1y4JPB6w8DT7m7x7AmERFJEDHr4guuKd0EPA4kAz9393Vmdguwxt2XA/8F3GNmW4B9RELseByxGzCBjKVjgbF1PDqW8BpLxzOWjhi1PfIAAAU2SURBVAWO4XhMDRYREQkjzSQhIiKhpIASEZFQGhMBdaQplRKNmVWb2RtmttbM1sS7nqNhZj83szozq4paVmhmT5rZ5uDnhHjWeDSGOJ5vmtnu4PysNbP3x7PGkTKzcjN72szWm9k6M/tCsDzhzs8wx5Ko5ybDzFaZ2WvB8XwrWD49mAZuSzAtXFq8az2SYY7lLjPbFnVuzjjivhL9GlQwpdKbwCVEbgZeDVzr7uvjWthxMLNqYKG7J9xNemb2HqAF+IW7zwuWfQ/Y5+7fDf6AmODuX45nnSM1xPF8E2hx9/8Xz9qOlpmVAWXu/oqZ5QIvA1cB15Ng52eYY/kIiXluDMh29xYzSwX+CHwB+BLwW3dfZmb/Drzm7v8Wz1qPZJhj+SzwiLvfP9J9jYUW1EimVJITxN2fIzIiM1r0lFZ3E/lFkhCGOJ6E5O417v5K8PogsIHIbC4Jd36GOZaE5BEtwdvU4J8D7yUyDRwkzrkZ6liO2lgIqMGmVErY/1ADDjxhZi8H0zwlulJ3rwle1wKl8SxmlNxkZq8HXYCh7xIbKHhywALgTyT4+RlwLJCg58bMks1sLVAHPAm8BRxw9+5gk4T53TbwWNy979x8Jzg3PzSz9CPtZywE1Fj0bnc/k8hM8H8ddDONCcGN2Indrwz/BswEzgBqgO/Ht5yjY2Y5wAPAF929OXpdop2fQY4lYc+Nu/e4+xlEZt1ZDJwc55KO2cBjMbN5wFeJHNMioBA4YjfyWAiokUyplFDcfXfwsw54kMh/rIlsb3DNoO/aQV2c6zku7r43+B+wF/hPEuj8BNcEHgB+6e6/DRYn5PkZ7FgS+dz0cfcDwNPA2UBBMA0cJODvtqhjWRp0y7q7dwB3MoJzMxYCaiRTKiUMM8sOLvpiZtnApUDV8J8KvegprT4J/E8cazlufb/MA1eTIOcnuHj9X8AGd/9B1KqEOz9DHUsCn5sSMysIXmcSGfS1gcgv9w8HmyXKuRnsWDZG/RFkRK6lHfHcJPwoPoBgKOmPeHtKpe/EuaRjZmYziLSaIDIV1a8S6XjM7F7gAiJT6+8FvgE8BNwHVADbgY+4e0IMPBjieC4g0oXkQDXwv6Ku4YSWmb0beB54A+gNFv89kWs3CXV+hjmWa0nMc3M6kUEQyUQaDve5+y3B74NlRLrEXgWuC1ogoTXMsTwFlAAGrAU+GzWYYvB9jYWAEhGRsWcsdPGJiMgYpIASEZFQUkCJiEgoKaBERCSUFFAiIhJKCiiRGDKznqjZm9faKM62b2aVFjXLushYE7NHvosIAG3BlC8icpTUghKJA4s88+t7Fnnu1yozmxUsrzSzp4IJNf9gZhXB8lIzezB4xs5rZnZOsKtkM/vP4Lk7TwR37ouMCQookdjKHNDF99GodU3ufhpwG5GZUAB+Ctzt7qcDvwR+Eiz/CfCsu88HzgTWBctnA7e7+6nAAeDPYnw8IieMZpIQiSEza3H3nEGWVwPvdfetwaSnte5eZGYNRB7E1xUsr3H3YjOrB6ZGT3MTPGbiSXefHbz/MpDq7v8U+yMTiT21oETix4d4fTSi52XrQdeVZQxRQInEz0ejfr4UvH6RyIz8AB8nMiEqwB+Av4L+h8Hln6giReJFf22JxFZm8GTRPo+5e99Q8wlm9jqRVtC1wbLPA3ea2d8B9cCnguVfAO4ws88QaSn9FZEH8omMWboGJRIHwTWohe7eEO9aRMJKXXwiIhJKakGJiEgoqQUlIiKhpIASEZFQUkCJiEgoKaBERCSUFFAiIhJK/x9Qni2nfQGe1wAAAABJRU5ErkJggg==\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00034/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671e20e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671e20e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671e20e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671e20e50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4c440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4c440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00034/cnn\n","Done.\n","Epoch: 35\n","Iteration=1000, G loss=0.07184\n","Iteration=2000, G loss=0.06868\n","Iteration=3000, G loss=0.17586\n","Iteration=4000, G loss=0.07465\n","Epoch generator training loss=0.10217\n","Epoch took 586.38 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00035/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef94810>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef94810>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef94810>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef94810>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067069da70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067069da70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00035/cnn\n","Done.\n","Epoch: 36\n","Iteration=1000, G loss=0.04740\n","Iteration=2000, G loss=0.17576\n","Iteration=3000, G loss=0.09095\n","Iteration=4000, G loss=0.07738\n","Epoch generator training loss=0.10057\n","Epoch took 587.03 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00036/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e293150>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e293150>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e293150>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e293150>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff74d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff74d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00036/cnn\n","Done.\n","Epoch: 37\n","Iteration=1000, G loss=0.06401\n","Iteration=2000, G loss=0.08357\n","Iteration=3000, G loss=0.13794\n","Iteration=4000, G loss=0.10966\n","Epoch generator training loss=0.09931\n","Epoch took 590.01 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00037/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671b08bd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671b08bd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671b08bd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671b08bd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671dcca70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671dcca70> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00037/cnn\n","Done.\n","Epoch: 38\n","Iteration=1000, G loss=0.06425\n","Iteration=2000, G loss=0.12931\n","Iteration=3000, G loss=0.08298\n","Iteration=4000, G loss=0.08090\n","Epoch generator training loss=0.09752\n","Epoch took 627.06 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00038/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e0ba4d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e0ba4d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e0ba4d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e0ba4d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4c4d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066fe4c4d0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00038/cnn\n","Done.\n","Epoch: 39\n","Iteration=1000, G loss=0.10273\n","Iteration=2000, G loss=0.10472\n","Iteration=3000, G loss=0.09403\n","Iteration=4000, G loss=0.07944\n","Epoch generator training loss=0.09633\n","Epoch took 605.84 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00039/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e136dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e136dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e136dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e136dd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066e068b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066e068b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00039/cnn\n","Done.\n","Epoch: 40\n","Iteration=1000, G loss=0.08311\n","Iteration=2000, G loss=0.10104\n","Iteration=3000, G loss=0.08408\n","Iteration=4000, G loss=0.13698\n","Epoch generator training loss=0.09454\n","Epoch took 621.42 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00040/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e1367d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e1367d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e1367d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e1367d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff7b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff7b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00040/cnn\n","Done.\n","Epoch: 41\n","Iteration=1000, G loss=0.05103\n","Iteration=2000, G loss=0.03774\n","Iteration=3000, G loss=0.11513\n","Iteration=4000, G loss=0.11566\n","Epoch generator training loss=0.09293\n","Epoch took 607.39 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00041/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e11f350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e11f350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e11f350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e11f350>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ecddb90> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ecddb90> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00041/cnn\n","Done.\n","Epoch: 42\n","Iteration=1000, G loss=0.06924\n","Iteration=2000, G loss=0.05601\n","Iteration=3000, G loss=0.11109\n","Iteration=4000, G loss=0.06201\n","Epoch generator training loss=0.09239\n","Epoch took 610.43 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00042/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efdda90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efdda90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efdda90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efdda90>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8b440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671d8b440> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00042/cnn\n","Done.\n","Epoch: 43\n","Iteration=1000, G loss=0.06774\n","Iteration=2000, G loss=0.03972\n","Iteration=3000, G loss=0.07959\n","Iteration=4000, G loss=0.17329\n","Epoch generator training loss=0.09067\n","Epoch took 608.10 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00043/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e0dc550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e0dc550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e0dc550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e0dc550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ea94950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ea94950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00043/cnn\n","Done.\n","Epoch: 44\n","Iteration=1000, G loss=0.08068\n","Iteration=2000, G loss=0.09935\n","Iteration=3000, G loss=0.07586\n","Iteration=4000, G loss=0.05538\n","Epoch generator training loss=0.08968\n","Epoch took 610.19 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00044/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ec05d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ec05d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ec05d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ec05d50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f5418b90> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06f5418b90> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00044/cnn\n","Done.\n","Epoch: 45\n","Iteration=1000, G loss=0.15434\n","Iteration=2000, G loss=0.11759\n","Iteration=3000, G loss=0.07195\n","Iteration=4000, G loss=0.10370\n","Epoch generator training loss=0.08855\n","Epoch took 622.86 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00045/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e9b2510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e9b2510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e9b2510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e9b2510>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b67f710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b67f710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00045/cnn\n","Done.\n","Epoch: 46\n","Iteration=1000, G loss=0.06154\n","Iteration=2000, G loss=0.06878\n","Iteration=3000, G loss=0.04600\n","Iteration=4000, G loss=0.06237\n","Epoch generator training loss=0.08698\n","Epoch took 666.69 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00046/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c71ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c71ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c71ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c71ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670045cb0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670045cb0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00046/cnn\n","Done.\n","Epoch: 47\n","Iteration=1000, G loss=0.11327\n","Iteration=2000, G loss=0.13060\n","Iteration=3000, G loss=0.08287\n","Iteration=4000, G loss=0.11056\n","Epoch generator training loss=0.08566\n","Epoch took 664.76 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00047/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b601450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b601450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b601450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b601450>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ee72710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ee72710> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00047/cnn\n","Done.\n","Epoch: 48\n","Iteration=1000, G loss=0.08848\n","Iteration=2000, G loss=0.05171\n","Iteration=3000, G loss=0.07298\n","Iteration=4000, G loss=0.07154\n","Epoch generator training loss=0.08565\n","Epoch took 683.74 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00048/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef8d550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef8d550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef8d550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef8d550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670167c20> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670167c20> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00048/cnn\n","Done.\n","Epoch: 49\n","Iteration=1000, G loss=0.09560\n","Iteration=2000, G loss=0.11745\n","Iteration=3000, G loss=0.11611\n","Iteration=4000, G loss=0.07367\n","Epoch generator training loss=0.08517\n","Epoch took 678.78 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00049/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b603050>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b603050>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b603050>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b603050>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ede8830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066ede8830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00049/cnn\n","Done.\n","Epoch: 50\n","Iteration=1000, G loss=0.07622\n","Iteration=2000, G loss=0.11049\n","Iteration=3000, G loss=0.09674\n","Iteration=4000, G loss=0.13731\n","Epoch generator training loss=0.08381\n","Epoch took 676.16 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00050/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671ee5190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671ee5190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671ee5190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671ee5190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070d7a0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070d7a0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00050/cnn\n","Done.\n","Epoch: 51\n","Iteration=1000, G loss=0.08400\n","Iteration=2000, G loss=0.05069\n","Iteration=3000, G loss=0.10636\n","Iteration=4000, G loss=0.09975\n","Epoch generator training loss=0.08259\n","Epoch took 642.91 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00051/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671acca50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671acca50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671acca50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671acca50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06706f6830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06706f6830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00051/cnn\n","Done.\n","Epoch: 52\n","Iteration=1000, G loss=0.05849\n","Iteration=2000, G loss=0.08493\n","Iteration=3000, G loss=0.09451\n","Iteration=4000, G loss=0.05783\n","Epoch generator training loss=0.08129\n","Epoch took 619.71 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00052/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670198550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0670198550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670198550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0670198550>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b60e0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b60e0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00052/cnn\n","Done.\n","Epoch: 53\n","Iteration=1000, G loss=0.11716\n","Iteration=2000, G loss=0.09484\n","Iteration=3000, G loss=0.09910\n","Iteration=4000, G loss=0.07296\n","Epoch generator training loss=0.08113\n","Epoch took 665.22 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00053/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067052a890>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f067052a890>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067052a890>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f067052a890>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670478830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0670478830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00053/cnn\n","Done.\n","Epoch: 54\n","Iteration=1000, G loss=0.08112\n","Iteration=2000, G loss=0.05945\n","Iteration=3000, G loss=0.06614\n","Iteration=4000, G loss=0.07128\n","Epoch generator training loss=0.08067\n","Epoch took 670.28 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00054/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c33410>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671c33410>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c33410>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671c33410>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb3b0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06eaefb3b0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00054/cnn\n","Done.\n","Epoch: 55\n","Iteration=1000, G loss=0.07240\n","Iteration=2000, G loss=0.09112\n","Iteration=3000, G loss=0.05254\n","Iteration=4000, G loss=0.08312\n","Epoch generator training loss=0.07949\n","Epoch took 664.52 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00055/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef64c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066ef64c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef64c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066ef64c10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b690830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b690830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00055/cnn\n","Done.\n","Epoch: 56\n","Iteration=1000, G loss=0.05365\n","Iteration=2000, G loss=0.11540\n","Iteration=3000, G loss=0.13299\n","Iteration=4000, G loss=0.08148\n","Epoch generator training loss=0.07899\n","Epoch took 637.62 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00056/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b764750>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f064b764750>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b764750>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f064b764750>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671960830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671960830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00056/cnn\n","Done.\n","Epoch: 57\n","Iteration=1000, G loss=0.08529\n","Iteration=2000, G loss=0.06980\n","Iteration=3000, G loss=0.07119\n","Iteration=4000, G loss=0.06194\n","Epoch generator training loss=0.07863\n","Epoch took 600.94 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00057/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e966190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e966190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e966190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e966190>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066effa830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066effa830> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00057/cnn\n","Done.\n","Epoch: 58\n","Iteration=1000, G loss=0.07950\n","Iteration=2000, G loss=0.05465\n","Iteration=3000, G loss=0.08401\n","Iteration=4000, G loss=0.11609\n","Epoch generator training loss=0.07732\n","Epoch took 604.43 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00058/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efc9b50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efc9b50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efc9b50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efc9b50>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f06701b6950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00058/cnn\n","Done.\n","Epoch: 59\n","Iteration=1000, G loss=0.06488\n","Iteration=2000, G loss=0.10908\n","Iteration=3000, G loss=0.07435\n","Iteration=4000, G loss=0.09155\n","Epoch generator training loss=0.07730\n","Epoch took 597.76 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00059/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efc5ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066efc5ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efc5ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066efc5ad0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eb92950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eb92950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00059/cnn\n","Done.\n","Epoch: 60\n","Iteration=1000, G loss=0.07555\n","Iteration=2000, G loss=0.09413\n","Iteration=3000, G loss=0.02978\n","Iteration=4000, G loss=0.05789\n","Epoch generator training loss=0.07620\n","Epoch took 605.96 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00060/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e967f10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e967f10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e967f10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e967f10>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070d5f0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f067070d5f0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00060/cnn\n","Done.\n","Epoch: 61\n","Iteration=1000, G loss=0.05923\n","Iteration=2000, G loss=0.05572\n","Iteration=3000, G loss=0.06216\n","Iteration=4000, G loss=0.04005\n","Epoch generator training loss=0.07574\n","Epoch took 598.57 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00061/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eb7b5d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066eb7b5d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eb7b5d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066eb7b5d0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671f68950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f0671f68950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00061/cnn\n","Done.\n","Epoch: 62\n","Iteration=1000, G loss=0.05103\n","Iteration=2000, G loss=0.07795\n","Iteration=3000, G loss=0.06048\n","Iteration=4000, G loss=0.06016\n","Epoch generator training loss=0.07511\n","Epoch took 601.50 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00062/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e97dcd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f066e97dcd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e97dcd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f066e97dcd0>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff7dd0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f066eff7dd0> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00062/cnn\n","Done.\n","Epoch: 63\n","Iteration=1000, G loss=0.06577\n","Iteration=2000, G loss=0.08364\n","Iteration=3000, G loss=0.14197\n","Iteration=4000, G loss=0.06066\n","Epoch generator training loss=0.07428\n","Epoch took 598.59 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00063/cnn\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671cc0650>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7f0671cc0650>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671cc0650>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7f0671cc0650>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b708950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.pretrain.<locals>.<lambda> at 0x7f064b708950> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00063/cnn\n","Done.\n","Epoch: 64\n","Iteration=1000, G loss=0.09447\n","Iteration=2000, G loss=0.04554\n","Iteration=3000, G loss=0.05917\n","Iteration=4000, G loss=0.11874\n","Epoch generator training loss=0.07374\n","Epoch took 602.57 seconds\n","\n","Done.\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["start_epoch_shift = 0\n","\n","for i in range(64):\n","  # requested number of epochs, refresh model every time to increase runtime\n","  model_name = 'drive/MyDrive/Studie/thesis/models/wind/'\n","  run_id = 'LR_MR'\n","\n","  if start_epoch_shift==0 and i==0:\n","    model_path = None\n","  else:\n","    model_path= '/'.join([model_name + run_id, 'cnn{0:05d}/cnn'.format(start_epoch_shift + i)])\n","    print(model_path)\n","\n","  model = PhIREGANs(data_type='wind', \n","                        N_epochs = 1,\n","                        save_every = 1, \n","                        learning_rate = 1e-4,\n","                        epoch_shift = start_epoch_shift + i, \n","                        print_every = 1000,\n","                        model_name = model_name,\n","                        run_id = run_id \n","                        )\n","\n","  model_dir = model.pretrain(r=[2],\n","                      data_path='drive/MyDrive/Studie/thesis/data/model/Wind_lr_mr.tfrecord',\n","                      model_path = model_path,\n","                      batch_size=1)\n","  \n","  # read and plot the loss function\n","  loss_df = pd.read_csv(model.model_name + '/loss_df.csv')\n","\n","  fig = plt.figure()\n","\n","  plt.plot(loss_df['Epoch'],loss_df['G loss'])\n","  plt.ylim(0,np.max(loss_df['G loss'])+0.1)\n","  plt.ylabel('Loss')\n","  plt.xlabel('Epoch')\n","  plt.title('Temperature')\n","  \n","  # vertical lines for when learning rate is changed\n","  #plt.vlines(28,0,loss_df['G loss'][27])\n","  plt.tight_layout()\n","  plt.show()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":300,"status":"ok","timestamp":1655472485660,"user":{"displayName":"Sebastiaan van Rijk","userId":"00934696021042774756"},"user_tz":-120},"id":"XD52KPpqTmCL","outputId":"9c6494c5-4b38-4ad3-8b02-d2b4ebffc6e4"},"outputs":[{"data":{"text/plain":["31"]},"execution_count":7,"metadata":{},"output_type":"execute_result"}],"source":["np.max(loss_df['Epoch'].values)"]},{"cell_type":"markdown","metadata":{"id":"T3e4yXFDIjMr"},"source":["### Training\n","\n","Using grid search over the hyperparameters:\n","- Alpha adversarial\n","- Discriminator drop out rate\n","\n","And tune learning rate dynamically, as epoch loss plateaus take a learning_rate = learning_rate / 10.\n","Plateau defined by slope less than 2 degrees?"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wQo-AwmXHehP","outputId":"d4ee551b-43c7-4f61-b81e-0f276428b105"},"outputs":[{"output_type":"stream","name":"stdout","text":["Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7ff465c37990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_train_ of <PhIREGANs.PhIREGANs object at 0x7ff465c37990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"Reshape:0\", shape=(?, ?, ?), dtype=float32) Tensor(\"Reshape_1:0\", shape=(?, ?, ?), dtype=float32)\n","Done.\n","Loading data ... WARNING:tensorflow:Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7ff465c37990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","WARNING: Entity <bound method PhIREGANs._parse_test_ of <PhIREGANs.PhIREGANs object at 0x7ff465c37990>> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Index'\n","Initializing network ... Done.\n","Building data pipeline ... WARNING:tensorflow:Entity <function PhIREGANs.train.<locals>.<lambda> at 0x7ff464436b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","WARNING: Entity <function PhIREGANs.train.<locals>.<lambda> at 0x7ff464436b00> could not be transformed and will be executed as-is. Please report this to the AutoGraph team. When filing the bug, set the verbosity to 10 (on Linux, `export AUTOGRAPH_VERBOSITY=10`) and attach the full output. Cause: module 'gast' has no attribute 'Str'\n","Tensor(\"ParseSingleExample/ParseSingleExample:5\", shape=(), dtype=int64) Tensor(\"truediv:0\", shape=(?, ?, 2), dtype=float32) Tensor(\"truediv_1:0\", shape=(?, ?, 2), dtype=float32)\n","Done.\n","Training network ...\n","Loading previously trained network... INFO:tensorflow:Restoring parameters from drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00007/cnn\n","Done.\n","Epoch: 1\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.21233, Content component=0.21163, Adversarial component=0.69916\n","D loss=0.38115\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.36915, Content component=0.36518, Adversarial component=3.96789\n","D loss=0.01239\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12686, Content component=0.12320, Adversarial component=3.65657\n","D loss=0.06507\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.26187, Content component=0.25488, Adversarial component=6.99725\n","D loss=0.00812\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.26345, discriminator training loss=0.21178\n","Epoch took 201.52 seconds\n","\n","Epoch: 2\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.26291, Content component=0.25829, Adversarial component=4.61467\n","D loss=0.01054\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.49754, Content component=0.48837, Adversarial component=9.16624\n","D loss=0.00005\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.26704, Content component=0.26478, Adversarial component=2.25472\n","D loss=0.05866\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.45163, Content component=0.44681, Adversarial component=4.81977\n","D loss=0.37187\n","TP=0.00000, TN=1.00000, FP=0.00000, FN=1.00000\n","\n","Epoch generator training loss=0.26187, discriminator training loss=0.06632\n","Epoch took 207.97 seconds\n","\n","Epoch: 3\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15279, Content component=0.15134, Adversarial component=1.44956\n","D loss=0.13373\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.23446, Content component=0.22400, Adversarial component=10.46362\n","D loss=0.00429\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.40760, Content component=0.39761, Adversarial component=9.99086\n","D loss=0.01861\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15694, Content component=0.14920, Adversarial component=7.74889\n","D loss=0.00135\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.25119, discriminator training loss=0.06327\n","Epoch took 214.17 seconds\n","\n","Epoch: 4\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14568, Content component=0.14180, Adversarial component=3.88364\n","D loss=0.01132\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.47319, Content component=0.47008, Adversarial component=3.11093\n","D loss=0.02297\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.31640, Content component=0.30941, Adversarial component=6.98985\n","D loss=0.00616\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.26080, Content component=0.25484, Adversarial component=5.96339\n","D loss=0.00129\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.24470, discriminator training loss=0.06353\n","Epoch took 209.66 seconds\n","\n","Epoch: 5\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11294, Content component=0.11068, Adversarial component=2.25934\n","D loss=0.05872\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.30746, Content component=0.30325, Adversarial component=4.20685\n","D loss=0.00755\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.22213, Content component=0.21760, Adversarial component=4.52656\n","D loss=0.00741\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12495, Content component=0.11702, Adversarial component=7.93016\n","D loss=0.00038\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.23553, discriminator training loss=0.05049\n","Epoch took 206.03 seconds\n","\n","Epoch: 6\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.19580, Content component=0.19040, Adversarial component=5.40297\n","D loss=0.02888\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.18725, Content component=0.18095, Adversarial component=6.29811\n","D loss=0.01748\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.29975, Content component=0.29088, Adversarial component=8.87595\n","D loss=0.00148\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=1, Number of discriminator training steps=2, \n","G loss=0.14473, Content component=0.14414, Adversarial component=0.59015\n","D loss=0.40403\n","TP=1.00000, TN=0.00000, FP=1.00000, FN=0.00000\n","\n","Epoch generator training loss=0.22594, discriminator training loss=0.05129\n","Epoch took 206.62 seconds\n","\n","Epoch: 7\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.25792, Content component=0.25328, Adversarial component=4.63364\n","D loss=0.00523\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.16955, Content component=0.16423, Adversarial component=5.31696\n","D loss=0.00351\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09020, Content component=0.08455, Adversarial component=5.65533\n","D loss=0.17989\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10148, Content component=0.09844, Adversarial component=3.03219\n","D loss=0.02480\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.21963, discriminator training loss=0.06088\n","Epoch took 205.01 seconds\n","\n","Epoch: 8\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11984, Content component=0.11609, Adversarial component=3.74936\n","D loss=0.01191\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14110, Content component=0.13803, Adversarial component=3.07115\n","D loss=0.02501\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.19615, Content component=0.18013, Adversarial component=16.02229\n","D loss=0.00001\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10142, Content component=0.09423, Adversarial component=7.18151\n","D loss=0.07878\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13223, Content component=0.13010, Adversarial component=2.12368\n","D loss=0.06369\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.21220, discriminator training loss=0.04833\n","Epoch took 206.28 seconds\n","\n","Epoch: 9\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12319, Content component=0.12048, Adversarial component=2.71220\n","D loss=0.03452\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.25782, Content component=0.24971, Adversarial component=8.10877\n","D loss=0.00026\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15335, Content component=0.14309, Adversarial component=10.25662\n","D loss=0.00403\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12795, Content component=0.12635, Adversarial component=1.59861\n","D loss=0.11330\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.20547, discriminator training loss=0.05011\n","Epoch took 205.98 seconds\n","\n","Epoch: 10\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13221, Content component=0.13151, Adversarial component=0.69406\n","D loss=0.43068\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.26933, Content component=0.26667, Adversarial component=2.66867\n","D loss=0.03828\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11230, Content component=0.10558, Adversarial component=6.72554\n","D loss=0.07250\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.27948, Content component=0.27407, Adversarial component=5.40907\n","D loss=0.00248\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.19704, discriminator training loss=0.05679\n","Epoch took 204.12 seconds\n","\n","Epoch: 11\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17651, Content component=0.15943, Adversarial component=17.07942\n","D loss=0.00039\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.16317, Content component=0.15920, Adversarial component=3.96937\n","D loss=0.00953\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17537, Content component=0.16867, Adversarial component=6.70746\n","D loss=0.20340\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14099, Content component=0.13314, Adversarial component=7.85710\n","D loss=0.00080\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.19059, discriminator training loss=0.05623\n","Epoch took 203.94 seconds\n","\n","Epoch: 12\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.18894, Content component=0.17901, Adversarial component=9.92630\n","D loss=0.00003\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.28476, Content component=0.27480, Adversarial component=9.95096\n","D loss=0.18175\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.21960, Content component=0.21372, Adversarial component=5.87926\n","D loss=0.00206\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14545, Content component=0.14266, Adversarial component=2.78504\n","D loss=0.03314\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.18544, discriminator training loss=0.05757\n","Epoch took 204.66 seconds\n","\n","Epoch: 13\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10068, Content component=0.09660, Adversarial component=4.07690\n","D loss=0.01564\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11816, Content component=0.11605, Adversarial component=2.11229\n","D loss=0.06513\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.18214, Content component=0.17429, Adversarial component=7.84445\n","D loss=0.00308\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17269, Content component=0.17076, Adversarial component=1.93048\n","D loss=0.07873\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.18099, discriminator training loss=0.04862\n","Epoch took 204.40 seconds\n","\n","Epoch: 14\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10411, Content component=0.09703, Adversarial component=7.08708\n","D loss=0.09749\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09852, Content component=0.09236, Adversarial component=6.15859\n","D loss=0.00373\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13264, Content component=0.12912, Adversarial component=3.52110\n","D loss=0.01504\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.21110, Content component=0.20973, Adversarial component=1.37057\n","D loss=0.14773\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.17585, discriminator training loss=0.05472\n","Epoch took 204.40 seconds\n","\n","Epoch: 15\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.19541, Content component=0.18756, Adversarial component=7.84252\n","D loss=0.00050\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17150, Content component=0.15372, Adversarial component=17.78766\n","D loss=0.00000\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12876, Content component=0.12091, Adversarial component=7.84582\n","D loss=0.09307\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09487, Content component=0.08861, Adversarial component=6.25984\n","D loss=0.00271\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.17152, discriminator training loss=0.04852\n","Epoch took 204.13 seconds\n","\n","Epoch: 16\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.16867, Content component=0.16786, Adversarial component=0.81429\n","D loss=0.29256\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17834, Content component=0.16916, Adversarial component=9.18358\n","D loss=0.00417\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10215, Content component=0.09700, Adversarial component=5.15367\n","D loss=0.08935\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11969, Content component=0.11529, Adversarial component=4.40453\n","D loss=0.00615\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10095, Content component=0.09447, Adversarial component=6.48347\n","D loss=0.01051\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.16749, discriminator training loss=0.06577\n","Epoch took 203.77 seconds\n","\n","Epoch: 17\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.20002, Content component=0.19901, Adversarial component=1.01467\n","D loss=0.22517\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.24475, Content component=0.23453, Adversarial component=10.22339\n","D loss=0.00002\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12428, Content component=0.11796, Adversarial component=6.32572\n","D loss=0.03401\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09113, Content component=0.09029, Adversarial component=0.83894\n","D loss=0.42773\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.16376, discriminator training loss=0.05780\n","Epoch took 204.41 seconds\n","\n","Epoch: 18\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.08300, Content component=0.07704, Adversarial component=5.96378\n","D loss=0.29037\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15651, Content component=0.14806, Adversarial component=8.44816\n","D loss=0.18582\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.34560, Content component=0.33768, Adversarial component=7.91727\n","D loss=0.00019\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14453, Content component=0.13394, Adversarial component=10.59158\n","D loss=0.04460\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.15995, discriminator training loss=0.06401\n","Epoch took 202.98 seconds\n","\n","Epoch: 19\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.19445, Content component=0.18620, Adversarial component=8.24875\n","D loss=0.00034\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14968, Content component=0.14078, Adversarial component=8.89762\n","D loss=0.12137\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.25712, Content component=0.24968, Adversarial component=7.44801\n","D loss=0.00029\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13751, Content component=0.12812, Adversarial component=9.38331\n","D loss=0.01818\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.15742, discriminator training loss=0.06599\n","Epoch took 203.72 seconds\n","\n","Epoch: 20\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.34135, Content component=0.34098, Adversarial component=0.37282\n","D loss=0.58365\n","TP=1.00000, TN=0.00000, FP=1.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10537, Content component=0.09960, Adversarial component=5.77444\n","D loss=0.00170\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12172, Content component=0.12084, Adversarial component=0.87583\n","D loss=0.27020\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.32907, Content component=0.31949, Adversarial component=9.57689\n","D loss=0.00004\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.15406, discriminator training loss=0.07220\n","Epoch took 205.68 seconds\n","\n","Epoch: 21\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12408, Content component=0.11528, Adversarial component=8.79757\n","D loss=0.01248\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14063, Content component=0.13848, Adversarial component=2.14678\n","D loss=0.07916\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10452, Content component=0.10139, Adversarial component=3.13537\n","D loss=0.09524\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15466, Content component=0.15309, Adversarial component=1.56968\n","D loss=0.11671\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.15076, discriminator training loss=0.07219\n","Epoch took 204.35 seconds\n","\n","Epoch: 22\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11027, Content component=0.10787, Adversarial component=2.39700\n","D loss=0.05729\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12845, Content component=0.12539, Adversarial component=3.05254\n","D loss=0.04620\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13567, Content component=0.13380, Adversarial component=1.86981\n","D loss=0.08398\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12691, Content component=0.12320, Adversarial component=3.70775\n","D loss=0.01249\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.14770, discriminator training loss=0.07001\n","Epoch took 205.45 seconds\n","\n","Epoch: 23\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.16520, Content component=0.15607, Adversarial component=9.13200\n","D loss=0.00006\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14815, Content component=0.13301, Adversarial component=15.13874\n","D loss=0.00176\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10894, Content component=0.10407, Adversarial component=4.86455\n","D loss=0.00388\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=1, Number of discriminator training steps=2, \n","G loss=0.13654, Content component=0.13356, Adversarial component=2.98736\n","D loss=0.31242\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.14591, discriminator training loss=0.06916\n","Epoch took 206.18 seconds\n","\n","Epoch: 24\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11946, Content component=0.11092, Adversarial component=8.53576\n","D loss=0.00010\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12073, Content component=0.11503, Adversarial component=5.70608\n","D loss=0.00442\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09852, Content component=0.09562, Adversarial component=2.90067\n","D loss=0.03187\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.08369, Content component=0.07841, Adversarial component=5.27982\n","D loss=0.00286\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.09888, Content component=0.09811, Adversarial component=0.77457\n","D loss=0.31005\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.14340, discriminator training loss=0.07631\n","Epoch took 204.71 seconds\n","\n","Epoch: 25\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.20590, Content component=0.20367, Adversarial component=2.22693\n","D loss=0.05707\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11933, Content component=0.11504, Adversarial component=4.29253\n","D loss=0.00891\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.08161, Content component=0.07609, Adversarial component=5.52488\n","D loss=0.02162\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13346, Content component=0.12638, Adversarial component=7.07313\n","D loss=0.02682\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.14104, discriminator training loss=0.07056\n","Epoch took 204.05 seconds\n","\n","Epoch: 26\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.22895, Content component=0.22608, Adversarial component=2.86969\n","D loss=0.02977\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12342, Content component=0.11507, Adversarial component=8.34768\n","D loss=0.00097\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12033, Content component=0.10743, Adversarial component=12.89582\n","D loss=0.11663\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.15119, Content component=0.14502, Adversarial component=6.16639\n","D loss=0.00107\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.13806, discriminator training loss=0.06787\n","Epoch took 203.73 seconds\n","\n","Epoch: 27\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11067, Content component=0.10938, Adversarial component=1.29331\n","D loss=0.16774\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11898, Content component=0.11432, Adversarial component=4.66044\n","D loss=0.16914\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.23661, Content component=0.23185, Adversarial component=4.76477\n","D loss=0.00611\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10280, Content component=0.09498, Adversarial component=7.81634\n","D loss=0.11062\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.13560, discriminator training loss=0.05834\n","Epoch took 204.06 seconds\n","\n","Epoch: 28\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10136, Content component=0.09676, Adversarial component=4.60221\n","D loss=0.00525\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10526, Content component=0.09862, Adversarial component=6.64701\n","D loss=0.05568\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14880, Content component=0.14254, Adversarial component=6.25632\n","D loss=0.00100\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.06891, Content component=0.06792, Adversarial component=0.98547\n","D loss=0.23444\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.13440, discriminator training loss=0.05552\n","Epoch took 203.40 seconds\n","\n","Epoch: 29\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17059, Content component=0.16120, Adversarial component=9.39330\n","D loss=0.00004\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.21752, Content component=0.20977, Adversarial component=7.75031\n","D loss=0.00022\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.16473, Content component=0.15580, Adversarial component=8.93359\n","D loss=0.00012\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.19048, Content component=0.17732, Adversarial component=13.16263\n","D loss=0.01829\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.13247, discriminator training loss=0.06598\n","Epoch took 203.65 seconds\n","\n","Epoch: 30\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.08885, Content component=0.08791, Adversarial component=0.93341\n","D loss=0.24992\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12655, Content component=0.12522, Adversarial component=1.32439\n","D loss=0.15525\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14380, Content component=0.14170, Adversarial component=2.09253\n","D loss=0.06585\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17843, Content component=0.16959, Adversarial component=8.84534\n","D loss=0.00024\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.13134, discriminator training loss=0.05544\n","Epoch took 202.50 seconds\n","\n","Epoch: 31\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.13301, Content component=0.12706, Adversarial component=5.95935\n","D loss=0.00129\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.11591, Content component=0.11190, Adversarial component=4.01226\n","D loss=0.00996\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14369, Content component=0.13300, Adversarial component=10.68930\n","D loss=0.09340\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.12723, Content component=0.11446, Adversarial component=12.76574\n","D loss=0.00338\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Epoch generator training loss=0.12960, discriminator training loss=0.06956\n","Epoch took 203.27 seconds\n","\n","Epoch: 32\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.10837, Content component=0.10459, Adversarial component=3.78340\n","D loss=0.01192\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.17307, Content component=0.16368, Adversarial component=9.38883\n","D loss=0.00038\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.08725, Content component=0.08534, Adversarial component=1.91656\n","D loss=0.16037\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n","Number of generator training steps=2, Number of discriminator training steps=1, \n","G loss=0.14956, Content component=0.14235, Adversarial component=7.21529\n","D loss=0.00037\n","TP=1.00000, TN=1.00000, FP=0.00000, FN=0.00000\n","\n"]}],"source":["#grid search initial model was epoch 7 LR MR\n","#standard: alpha_advers=0.001\n","\n","alphas = [0.001,0.0001]\n","dropout_rates = [0,0.2,0.4,0.6,0.8, 0.99]\n","\n","\n","for a in alphas:\n","    for d in dropout_rates:\n","        model_name = 'drive/MyDrive/Studie/thesis/models/wind/LR_MR_grid_search/'\n","        run_id = 'alpha' + str(a) + '_dropout' + str(d)\n","        \n","        model = PhIREGANs(data_type='wind',\n","                              print_every = 1000,\n","                              save_every = 1,\n","                              N_epochs = 32,\n","                              epoch_shift = None,\n","                              model_name = model_name,\n","                              run_id= run_id)\n","\n","        model.train(r = [2],\n","                      data_path = 'drive/MyDrive/Studie/thesis/data/model/Wind_lr_mr.tfrecord',\n","                      model_path = 'drive/MyDrive/Studie/thesis/models/wind/LR_MR/cnn00007/cnn',\n","                      batch_size = 1,\n","                      alpha_advers = a,\n","                      dropout_rate = d)"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":["VGqvsntEIaH8"],"name":"Wind trainer","provenance":[],"mount_file_id":"1OVCgS8CVECrGyf1OWON3MJBFCDkUyFVF","authorship_tag":"ABX9TyNKbFqiQOH4i6Z9RHWdbtty"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}